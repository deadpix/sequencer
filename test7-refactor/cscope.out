cscope 15 $HOME/Documents/sequencer/test7-refactor -q 0000000742 0000085795
	@Bounce_array.cpp

3 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

4 
	~"Arduöo.h
"

6 
	~"WProgøm.h
"

8 
	~"Boun˚_¨øy.h
"

10 
	#DEBOUNCED_STATE
 0

	)

11 
	#UNSTABLE_STATE
 1

	)

12 
	#STATE_CHANGED
 3

	)

14 
	$uöt8_t
 (*
dig_ªad
)(
uöt8_t
);

16 
AºBoun˚
::
	$öô_±rfunc
(
	$uöt8_t
 (*
rd_func
)(
uöt8_t
)){

18 
dig_ªad
 = 
rd_func
;

19 
	}
}

22 
	gAºBoun˚
::
	$AºBoun˚
()

23 : 
	`¥evious_mûlis
(0)

24 , 
	`öãrvÆ_mûlis
(10)

25 , 
	`°©e
(0)

26 , 
	$pö
(0)

27 {
	}
}

29 
	gAºBoun˚
::
	$öô_AºBoun˚
(
uöt8_t
* 
pö_¨r
, 
öãrvÆ_mûlis
, 
size
, 
	$uöt8_t
 (*
rd_func
)(
uöt8_t
)){

30 
this
->
size
 = size;

31 
	`öãrvÆ
(
öãrvÆ_mûlis
);

32 
¥evious_mûlis
 = 
√w
 [
size
];

33 
°©e
 = 
√w
 [
size
];

34 
pö
 = 
√w
 [
size
];

35 
	`©èch
(
pö_¨r
, 
rd_func
);

36 
	}
}

39 
	gAºBoun˚
::
	$©èch
(
uöt8_t
* 
pö_¨r
, 
	$uöt8_t
 (*
rd_func
)(
uöt8_t
)) {

40 
dig_ªad
 = 
rd_func
;

41 
i
=0;i<
this
->
size
;i++){

42 
this
->
	`©èch
(
pö_¨r
[
i
], i);

44 
	}
}

48 
	gAºBoun˚
::
	$©èch
(
pö
, 
idx
) {

49 
this
->
pö
[
idx
] =Öin;

50 
°©e
[
idx
] = 0;

52 i‡(
	`dig_ªad
(
pö
)) {

53 
°©e
[
idx
] = 
	`_BV
(
DEBOUNCED_STATE
Ë| _BV(
UNSTABLE_STATE
);

55 #ifde‡
BOUNCE_LOCK_OUT


56 
¥evious_mûlis
[
idx
] = 0;

58 
¥evious_mûlis
[
idx
] = 
	`mûlis
();

60 
	}
}

62 
	gAºBoun˚
::
	$©èch
(
pö
, 
mode
, 
idx
){

63 
	`pöMode
(
pö
, 
mode
);

65 
this
->
	`©èch
(
pö
, 
idx
);

66 
	}
}

68 
	gAºBoun˚
::
	$öãrvÆ
(
uöt16_t
 
öãrvÆ_mûlis
)

70 
this
->
öãrvÆ_mûlis
 = interval_millis;

71 
	}
}

73 
boﬁ
 
	gAºBoun˚
::
	$upd©e
(
idx
)

75 #ifde‡
BOUNCE_LOCK_OUT


76 
°©e
[
idx
] &~
	`_BV
(
STATE_CHANGED
);

78 i‡(
	`mûlis
(Ë- 
¥evious_mûlis
[
idx
] >
öãrvÆ_mûlis
) {

80 
boﬁ
 
cuºítSèã
 = 
	`dig_ªad
(
pö
[
idx
]);

81 i‡((
boﬁ
)(
°©e
[
idx
] & 
	`_BV
(
DEBOUNCED_STATE
)Ë!
cuºítSèã
) {

82 
¥evious_mûlis
[
idx
] = 
	`mûlis
();

83 
°©e
[
idx
] ^
	`_BV
(
DEBOUNCED_STATE
);

84 
°©e
[
idx
] |
	`_BV
(
STATE_CHANGED
);

87  
°©e
[
idx
] & 
	`_BV
(
STATE_CHANGED
);

89 #ñi‡
deföed
 
BOUNCE_WITH_PROMPT_DETECTION


93 
boﬁ
 
ªadSèã
 = 
	`dig_ªad
(
pö
[
idx
]);

97 
°©e
[
idx
] &~
	`_BV
(
STATE_CHANGED
);

99 i‡–
ªadSèã
 !(
boﬁ
)(
°©e
[
idx
] & 
	`_BV
(
DEBOUNCED_STATE
))) {

102 i‡–
	`mûlis
(Ë- 
¥evious_mûlis
[
idx
] >
öãrvÆ_mûlis
 ) {

107 
°©e
[
idx
] ^
	`_BV
(
DEBOUNCED_STATE
);

108 
°©e
[
idx
] |
	`_BV
(
STATE_CHANGED
);

114 i‡–
ªadSèã
 !(
boﬁ
)(
°©e
[
idx
] & 
	`_BV
(
UNSTABLE_STATE
)) ) {

116 
°©e
[
idx
] ^
	`_BV
(
UNSTABLE_STATE
);

117 
¥evious_mûlis
[
idx
] = 
	`mûlis
();

120  
°©e
[
idx
] & 
	`_BV
(
STATE_CHANGED
);

130 
boﬁ
 
cuºítSèã
 = 
	`dig_ªad
(
pö
[
idx
]);

138 
°©e
[
idx
] &~
	`_BV
(
STATE_CHANGED
);

141 i‡–
cuºítSèã
 !(
boﬁ
)(
°©e
[
idx
] & 
	`_BV
(
UNSTABLE_STATE
)) ) {

142 
¥evious_mûlis
[
idx
] = 
	`mûlis
();

143 
°©e
[
idx
] ^
	`_BV
(
UNSTABLE_STATE
);

145 i‡–
	`mûlis
(Ë- 
¥evious_mûlis
[
idx
] >
öãrvÆ_mûlis
 ) {

148 i‡((
boﬁ
)(
°©e
[
idx
] & 
	`_BV
(
DEBOUNCED_STATE
)Ë!
cuºítSèã
) {

149 
¥evious_mûlis
[
idx
] = 
	`mûlis
();

150 
°©e
[
idx
] ^
	`_BV
(
DEBOUNCED_STATE
);

151 
°©e
[
idx
] |
	`_BV
(
STATE_CHANGED
);

155  
°©e
[
idx
] & 
	`_BV
(
STATE_CHANGED
);

157 
	}
}

159 
boﬁ
 
	gAºBoun˚
::
	$ªad
(
idx
)

161  
°©e
[
idx
] & 
	`_BV
(
DEBOUNCED_STATE
);

162 
	}
}

164 
boﬁ
 
	gAºBoun˚
::
	$ro£
(
idx
)

166  ( 
°©e
[
idx
] & 
	`_BV
(
DEBOUNCED_STATE
ËË&& ( sèã[idx] & _BV(
STATE_CHANGED
));

167 
	}
}

169 
boﬁ
 
	gAºBoun˚
::
	$„Œ
(
idx
)

171  !–
°©e
[
idx
] & 
	`_BV
(
DEBOUNCED_STATE
ËË&& ( sèã[idx] & _BV(
STATE_CHANGED
));

172 
	}
}

	@Bounce_array.h

29 #i‚de‡
Boun˚_¨øy_h


30 
	#Boun˚_¨øy_h


	)

33 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

34 
	~<Arduöo.h
>

36 
	~<WProgøm.h
>

47 
	~<öây≥s.h
>

50 ˛as†
	cAºBoun˚


52 
	mpublic
:

54 
AºBoun˚
();

56 
©èch
(
uöt8_t
* 
pö_¨r
, 
	$uöt8_t
 (*
rd_func
)(
uöt8_t
));

59 
	`©èch
(
pö
, 
idx
);

62 
	`©èch
(
pö
, 
mode
, 
idx
);

65 
	`öãrvÆ
(
uöt16_t
 
öãrvÆ_mûlis
);

70 
boﬁ
 
	`upd©e
(
idx
);

73 
boﬁ
 
	`ªad
(
idx
);

76 
boﬁ
 
	`„Œ
(
idx
);

79 
boﬁ
 
	`ro£
(
idx
);

81 
	`öô_±rfunc
(
	$uöt8_t
 (*
rd_func
)(
uöt8_t
));

83 
	`öô_AºBoun˚
(
uöt8_t
* 
pö_¨r
, 
öãrvÆ_mûlis
, 
size
, 
	$uöt8_t
 (*
rd_func
)(
uöt8_t
));

86 
boﬁ
 
	$risögEdge
(
idx
Ë{  
	`ro£
(idx); }

87 
boﬁ
 
	$ÁŒögEdge
(
idx
Ë{  
	`„Œ
(idx); 
	}
}

88 
	$AºBoun˚
(
uöt8_t
* 
pö_¨r
, 
öãrvÆ_mûlis
, 
size
, 
	$uöt8_t
 (*
rd_func
)(
uöt8_t
ËË: 
	$AºBoun˚
() {

89 
this
->
size
 = size;

90 
	`öãrvÆ
(
öãrvÆ_mûlis
);

91 
¥evious_mûlis
 = 
√w
 [
size
];

92 
°©e
 = 
√w
 [
size
];

93 
pö
 = 
√w
 [
size
];

94 
	`©èch
(
pö_¨r
, 
rd_func
);

95 
	}
}

97 
	g¥Ÿe˘ed
:

98 * 
¥evious_mûlis
;

99 
uöt16_t
 
	göãrvÆ_mûlis
;

100 
uöt8_t
* 
	g°©e
;

101 
uöt8_t
* 
	gpö
;

102 
	gsize
;

	@Main.cpp

1 
	~"Maö,h
"

3 
	gMaö
::
	$öô_¥og
(
¥og
* 
p
, 
¥og_id
, * 
°r
){

4 
¥og_¨r
[
¥og_id
] = 
p
;

5 
p
->
	`£t_¥og_id
(
¥og_id
);

6 
p
->
	`£t_tôÀ
(
°r
);

7 
míu_˘æ
.
	`£t_míu_¥og_íåy
(
¥og_id
, 
p
);

8 
	}
}

10 
	gMaö
::
	$öô_£quí˚r
(){

11 
£q_›ti⁄1
.
	`öô
(&
midi_£q
, "step");

12 
£q_›ti⁄2
.
	`öô
(&
midi_£q
, "looplen");

14 
midi_£q
.
	`add_f˘
(&
£q_›ti⁄1
, 0);

15 
midi_£q
.
	`add_f˘
(&
£q_›ti⁄2
, 1);

17 
midi_£q
.
	`£t_cuºít_∑øm
(0);

18 
midi_£q
.
¥og
::
	`di•œy_°r
("step", 1);

19 
midi_£q
.
¥og
::
	`£t_∑øm
(&
£q_∑øm_ui
);

24 
£q_∑øm_ui
.
	`öô
(&
midi_£q
, 
m°_˛k
);

25 
£q_∑øm_ui
.
∑øm
::
	`£t_¥og
(&
midi_£q
);

26 
	}
}

28 
	gMaö
::
	$öô_Æl_¥og
(
gui
 *
g
){

29 
ƒ_¥og
 = 0;

30 
Àd_m©rix
* 
míu_lmtx
 = 
míu_˘æ
.
	`gë_míu_Àd_m©rix
();

32 
	`öô_⁄e_¥og
((
¥og
 *Ë&
ãmpo_£âög
, 
ƒ_¥og
, "Setting");

33 
ƒ_¥og
++;

35 
	`öô_⁄e_¥og
((
¥og
 *Ë&
p1
, 
ƒ_¥og
, "MIDIctl");

36 
míu_lmtx
->
	`£t_Àd_x
(
LED_R_IDX
, 
ƒ_¥og
 * 
MATRIX_NR_ROW
 + 0);

37 
ƒ_¥og
++;

39 
	`öô_⁄e_¥og
((
¥og
 *Ë&
p2
, 
ƒ_¥og
, "Prog 2");

40 
míu_lmtx
->
	`£t_Àd_x
(
LED_B_IDX
, 
ƒ_¥og
 * 
MATRIX_NR_ROW
 + 0);

41 
ƒ_¥og
++;

43 
	`öô_⁄e_¥og
((
¥og
 *Ë&
midi_£q
, 
ƒ_¥og
, "MIDIseq");

44 
míu_lmtx
->
	`£t_Àd_x
(
LED_B_IDX
, 
ƒ_¥og
 * 
MATRIX_NR_ROW
 + 0);

45 
ƒ_¥og
++;

48 
¥og_¨r
[
ƒ_¥og
] = &
míu_˘æ
;

50 
i
=0;i<
ƒ_¥og
;i++){

51 
¥og_¨r
[
i
]->
	`£t_míu_lm
(
míu_lmtx
);

52 
¥og_¨r
[
i
]->
	`£t_gui
(
g
);

55 
lm_±r
 = 
p1
.
	`gë_Àd_m©rix
();

56 
cuºít_¥og
 = 
¥og_¨r
[1];

57 
cuºít_¥og
->
	`di•œy_tôÀ
();

60 
ãmpo_£âög
.
	`öô
(
ãmpo_ch™ge_h™dÀr
, &
midi_£q
);

61 
m°_˛k
 = 
ãmpo_£âög
.
	`gë_m°_˛k
();

62 
m°_˛k
->
	`˛k_£t_max_°ï
(
NR_STEP
);

63 
	`ãmpo_ch™ge_h™dÀr
(
m°_˛k
->
	`˛k_gë_ms
());

65 
	`öô_midi_£q
(&
midi_£q
);

66 
	`öô_midi_c⁄åﬁÀr
(&
p1
);

67 
	`öô_£quí˚r
();

69 
	}
}

71 
	gMaö
::
	$öô
(
gui
 *
g
){

72 
	`öô_Æl_¥og
(
g
);

73 
	}
}

74 
	gMaö
::
	$lo›
(){

76 
	}
}

	@Main.h

1 #i‚de‡
__MAIN_H__


2 
	#__MAIN_H__


	)

4 
	~"ty≥s.h
"

6 
	~"¥og.h
"

7 
	~"míu.h
"

8 
	~"Àd_m©rix.h
"

9 
	~"ãmpo.h
"

10 
	~"£quí˚r.h
"

11 
	~"ã°_¥oj_⁄e.h
"

12 
	~"ã°_¥oj_two.h
"

13 
	~"gui.h
"

17 ˛as†
	cMaö
 {

18 
	m¥iv©e
:

19 
öô_¥og
(
¥og
*, , *);

20 
öô_Æl_¥og
(
gui
*);

21 
öô_£quí˚r
();

23 
	mpublic
:

24 
míu
 
míu_˘Ã
;

25 
¥og
 *
	m¥og_¨r
[
MATRIX_NR_COL
];

26 
uöt8_t
 
	mƒ_¥og
;

28 
ãmpo
 
	mãmpo_£âög
;

29 
£quí˚r
 
	mmidi_£q
;

30 
ã°_¥oj_⁄e
 
	mp1
;

31 
ã°_¥oj_two
 
	mp2
;

33 
£q_∑øm
 
	m£q_∑øm_ui
;

34 
f˘_°ï
 
	m£q_›ti⁄1
;

35 
f˘_lo›_£âög
 
	m£q_›ti⁄2
;

38 
	$Maö
(){};

39 ~
	$Maö
(){
	}
};

41 
öô
(
gui
*);

42 
lo›
();

	@bit.cpp

1 
	~"bô.h
"

3 
	#WORD_BITS
 16

	)

4 
	#WORD_BITS_LOG2
 4

	)

5 
	#bôwi£_gëw‹d
(
x
Ë((xË>> 
WORD_BITS_LOG2
Ë

	)

6 
	#bôwi£_gëbô
(
x
Ë(1UL << ((xË% 
WORD_BITS
))

	)

8 
	gBIT
::
	$is_bô_£t
(
uöt16_t
 
ªg
, 
bô_pos
){

9  
ªg
 & (1U << 
bô_pos
);

10 
	}
}

12 
	gBIT
::
	$föd_√xt_bô
 (
uöt16_t
 *
w‹d
, uöt16_à
limô
, uöt16_à
‰om
){

13 
suc˚ss
 = 0;

14 
i
;

16 
i
 = 
‰om
; i < 
limô
; i++) {

17 i‡((
w‹d
[
	`bôwi£_gëw‹d
(
i
)] & 
	`bôwi£_gëbô
(i))) {

18 
suc˚ss
 = 1;

22 i‡(
suc˚ss
)

23  
i
;

26 
	}
}

28 
	gBIT
::
	$˛ór_bôs
(
uöt16_t
 *
w‹d
, uöt16_à
‰om
, uöt16_à
Àn
){

29 
i
;

30 
i
 = 
‰om
; i < from + 
Àn
; i++) {

31 
w‹d
[
	`bôwi£_gëw‹d
(
i
)] &~(
	`bôwi£_gëbô
(i));

33 
	}
}

35 
	gBIT
::
	$£t_bôs
(
uöt16_t
 *
w‹d
, uöt16_à
‰om
, uöt16_à
Àn
){

36 
i
;

37 
i
 = 
‰om
; i < from + 
Àn
; i++) {

38 
w‹d
[
	`bôwi£_gëw‹d
(
i
)] |
	`bôwi£_gëbô
(i);

40 
	}
}

42 
	gBIT
::
	$check_bô
(
uöt16_t
 *
w‹d
, 
bô
){

43 i‡(
w‹d
[
	`bôwi£_gëw‹d
(
bô
)] & 
	`bôwi£_gëbô
(bit)) {

48 
	}
}

50 
uöt8_t
 
	gBIT
::
	$gë_highe°_bô_£t
(
v
){

51 
uöt8_t
 
ªt
 = 0;

52 
v
 >>= 1){

53 
ªt
++;

55  
ªt
;

56 
	}
}

	@bit.h

1 #i‚de‡
__BIT_H__


2 
	#__BIT_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

11 
«me•a˚
 
	gBIT
 {

12 
is_bô_£t
(
uöt16_t
 
ªg
, 
bô_pos
);

13 
föd_√xt_bô
 (
uöt16_t
 *
w‹d
, uöt16_à
limô
, uöt16_à
‰om
);

14 
˛ór_bôs
(
uöt16_t
 *
w‹d
, uöt16_à
‰om
, uöt16_à
Àn
);

15 
£t_bôs
(
uöt16_t
 *
w‹d
, uöt16_à
‰om
, uöt16_à
Àn
);

16 
check_bô
(
uöt16_t
 *
w‹d
, 
bô
);

17 
uöt8_t
 
gë_highe°_bô_£t
();

21 
	#f‹_óch£t_bô
(
bô
, 
w‹d
, 
limô
) \

22 (
bô
Ë(
BIT
::
	`föd_√xt_bô
((
w‹d
), (
limô
), 0)); \

23 ((
bô
Ë< (
limô
)) && (bit != -1); \

24 (
bô
Ë(
BIT
::
	`föd_√xt_bô
((
w‹d
), (
limô
), (bôË+ 1)))

	)

	@btn_state.cpp

25 
	~"bä_°©e.h
"

26 
	~"bô.h
"

28 
	gbä_°©e
::
	$bä_°©e
(){

29 
uöt8_t
 
i
=0;i<
MATRIX_NR_COL
;i++){

30 
sh‹t_push
[
i
] = 0x0;

31 
l⁄g_push
[
i
] = 0x0;

33 
	}
}

35 
	gbä_°©e
::
	$£t_sh‹t_push
(
uöt8_t
 
id
){

36 
sh‹t_push
[
id
 / 
MATRIX_NR_COL
] |= (1 << MATRIX_NR_COL);

37 
	}
}

38 
	gbä_°©e
::
	$˛r_sh‹t_push
(
uöt8_t
 
id
){

39 
sh‹t_push
[
id
 / 
MATRIX_NR_COL
] &= ~(1 << MATRIX_NR_COL);

40 
	}
}

41 
	gbä_°©e
::
	$£t_l⁄g_push
(
uöt8_t
 
id
){

42 
l⁄g_push
[
id
 / 
MATRIX_NR_COL
] |= (1 << MATRIX_NR_COL);

43 
	}
}

44 
	gbä_°©e
::
	$˛r_l⁄g_push
(
uöt8_t
 
id
){

45 
l⁄g_push
[
id
 / 
MATRIX_NR_COL
] &= ~(1 << MATRIX_NR_COL);

46 
	}
}

48 
uöt8_t
 
	gbä_°©e
::
	$gë_ƒ_sh‹t_push
(){

49 
uöt8_t
 
bô
 = 0, 
˙t
 = 0;

50 
uöt8_t
 
i
=0; i<
MATRIX_NR_COL
; i++){

51 
	`f‹_óch£t_bô
(
bô
, (
uöt16_t
 *Ë&
sh‹t_push
[
i
], 
BIT_PER_BYTE
){

52 
˙t
++;

55  
˙t
;

56 
	}
}

57 
uöt8_t
 
	gbä_°©e
::
	$gë_ƒ_l⁄g_push
(){

58 
uöt8_t
 
bô
 = 0, 
˙t
 = 0;

59 
uöt8_t
 
i
=0;i<
MATRIX_NR_COL
;i++){

60 
	`f‹_óch£t_bô
(
bô
, (
uöt16_t
 *Ë&
l⁄g_push
[
i
], 
BIT_PER_BYTE
){

61 
˙t
++;

64  
˙t
;

66 
	}
}

67 
uöt8_t
 
	gbä_°©e
::
	$gë_sh‹t_push_id
(
uöt8_t
* 
¨r
){

68 
uöt8_t
 
bô
 = 0, 
˙t
 = 0, 
¨r_size
 = (
¨r
) / (arr[0]);

69 
uöt8_t
 
i
=0;i<
MATRIX_NR_COL
;i++){

70 
	`f‹_óch£t_bô
(
bô
, (
uöt16_t
 *Ë&
sh‹t_push
[
i
], 
BIT_PER_BYTE
){

71 
¨r
[++
˙t
] = 
bô
;

72 if(
˙t
 =
¨r_size
){

73  
˙t
;

77  
˙t
;

79 
	}
}

80 
uöt8_t
 
	gbä_°©e
::
	$gë_l⁄g_push_id
(
uöt8_t
* 
¨r
){

81 
uöt8_t
 
bô
 = 0, 
˙t
 = 0, 
¨r_size
 = (
¨r
) / (arr[0]);

82 
uöt8_t
 
i
=0;i<
MATRIX_NR_COL
;i++){

83 
	`f‹_óch£t_bô
(
bô
, (
uöt16_t
 *Ë&
l⁄g_push
[
i
], 
BIT_PER_BYTE
){

84 
¨r
[++
˙t
] = 
bô
;

85 if(
˙t
 =
¨r_size
){

86  
˙t
;

90  
˙t
;

91 
	}
}

	@btn_state.h

24 #i‚de‡
__BTN_STATE_H__


25 
	#__BTN_STATE_H__


	)

27 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

28 
	~<Arduöo.h
>

30 
	~<WProgøm.h
>

33 
	~"ty≥s.h
"

34 
	~"bô.h
"

36 
	#BIT_PER_BYTE
 8

	)

37 ˛as†
	cbä_°©e
 {

38 
	m¥iv©e
:

39 
byã
 
sh‹t_push
[
MATRIX_NR_COL
];

40 
byã
 
	ml⁄g_push
[
MATRIX_NR_COL
];

42 
	mpublic
:

43 
bä_°©e
();

44 ~
	$bä_°©e
(){};

46 
	`£t_sh‹t_push
(
uöt8_t
);

47 
	`˛r_sh‹t_push
(
uöt8_t
);

48 
	`£t_l⁄g_push
(
uöt8_t
);

49 
	`˛r_l⁄g_push
(
uöt8_t
);

51 
uöt8_t
 
	`gë_ƒ_sh‹t_push
();

52 
uöt8_t
 
	`gë_ƒ_l⁄g_push
();

54 
uöt8_t
 
	`gë_sh‹t_push_id
(uint8_t*);

55 
uöt8_t
 
	`gë_l⁄g_push_id
(uint8_t*);

56 
	}
};

	@clk.cpp

25 
	~"˛k.h
"

26 
	~"ty≥s.h
"

28 
	#MAX_DIVIDER
 16

	)

29 
	#DELAY_MS
 50

	)

30 
	#MAX_STEP
 (
MATRIX_NR_ROW
*
MATRIX_NR_COL
)

	)

32 
uöt32_t
 
	$bpm_to_ms
(
uöt16_t
 
bpm
){

33  (60000/
bpm
);

34 
	}
}

36 
uöt16_t
 
	$ms_to_bpm
(
uöt32_t
 
ms
){

37  (
uöt16_t
)(
ms
/60000);

38 
	}
}

40 
uöt16_t
 
	$bpms_to_bpm
(
uöt32_t
 
bpms
){

41  (
uöt16_t
Ë(60000/
bpms
);

42 
	}
}

44 
	g˛k
::
	$˛k
(){

45 
_°ï_˙t
 = 0;

46 
_max_°ï
 = 
MAX_STEP
;

47 
_bpm
 = 90;

48 
_ñ≠£d_ms
 = 0;

49 
_ms
 = 
	`bpm_to_ms
(
_bpm
);

50 
_›î©i⁄
 = 1;

51 
_ªsync
 = 
Ál£
;

52 
_numî©‹
 = 1;

53 
_díomö©‹
 = 1;

54 
	}
}

56 
	g˛k
::~
	$˛k
(){

57 
	}
}

59 
˛k
::
	$˛k_sync_öã∫
(
uöt32_t
 
ms
){

60 if(
_›î©i⁄
 < 0){

61 
_ms
 = 
ms
 * 
	`abs
(
_›î©i⁄
);

62 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

64 
_ms
 = 
ms
 / 
_›î©i⁄
;

65 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

67 
	}
}

69 
uöt32_t
 
	g˛k
::
	$˛k_gë_ms
(){

70  
_ms
;

71 
	}
}

72 
uöt16_t
 
	g˛k
::
	$˛k_gë_°ï_˙t
(){

73  
_°ï_˙t
;

74 
	}
}

75 
uöt32_t
 
	g˛k
::
	$˛k_gë_ñ≠£d_ms
(){

76  
_ñ≠£d_ms
;

77 
	}
}

78 
	g˛k
::
	$˛k_gë_›î©‹
(){

79  
_›î©i⁄
;

80 
	}
}

81 
uöt16_t
 
	g˛k
::
	$˛k_gë_bpm
(){

82  
_bpm
;

83 
	}
}

85 
	g˛k
::
	$˛k_£t_max_°ï
(
uöt8_t
 
max_°ï
){

86 
_max_°ï
 = 
max_°ï
;

87 
	}
}

89 
	g˛k
::
	$˛k_bpms_to_bpm
(
uöt32_t
 
bpms
){

90 
uöt16_t
 
bpm
 = 
	`bpms_to_bpm
(
bpms
);

91 
	`˛k_£t_bpm
(
bpm
);

92 
	}
}

94 
	g˛k
::
	$˛k_£t_ms
(
uöt32_t
 
√w_ms
){

95 
ªt
 = 0;

96 if(
√w_ms
 < 
_ms
)

97 
ªt
 = 1;

98 
_ms
 = 
√w_ms
;

99 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

101  
ªt
;

102 
	}
}

104 
	g˛k
::
	$˛k_£t_bpm
(
uöt16_t
 
√w_bpm
){

105 
ªt
 = 0;

106 if(
√w_bpm
 > 
_bpm
)

107 
ªt
 = 1;

108 
_bpm
 = 
√w_bpm
;

109 
_ms
 = 
	`bpm_to_ms
(
_bpm
);

111  
ªt
;

112 
	}
}

114 
boﬁón
 
	g˛k
::
	$˛k_£t_øtio
(
uöt32_t
 
ms_ªf
, 
uöt8_t
 
numî©‹
, uöt8_à
díomö©‹
){

115 
boﬁón
 
ªt
 = 
Ál£
;

116 if(
_numî©‹
 !
numî©‹
 || 
_díomö©‹
 !
díomö©‹
){

117 
_numî©‹
 = 
numî©‹
;

118 
_díomö©‹
 = 
díomö©‹
;

120 
_ms
 = 
ms_ªf
 * 
_numî©‹
 / 
_díomö©‹
;

121 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

123 
_°ï_˙t
 = 0;

124 
ªt
 = 
åue
;

129  
ªt
;

130 
	}
}

132 
boﬁón
 
	g˛k
::
	$˛k_£t_›î©i⁄
(
›
, 
uöt32_t
 
ms_ªf
){

133 
boﬁón
 
ªt
 = 
åue
;

135 if(
›
 < 0){

136 
_ms
 = 
ms_ªf
 * 
	`abs
(
›
);

137 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

138 
_›î©i⁄
 = 
›
;

140 if(
›
 > 0){

141 
_ms
 = 
ms_ªf
 / 
›
;

142 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

143 
_›î©i⁄
 = 
›
;

145 if(
›
 == 0){

146 
_›î©i⁄
 = 1;

147 
ªt
 = 
Ál£
;

149 if–(
	`abs
(
›
Ë> 
_max_°ï
Ë|| (
_ms
 <= 0) ){

150 
ªt
 = 
Ál£
;

152  
ªt
;

153 
	}
}

155 
uöt32_t
 
	g˛k
::
	$˛k_sync_dividî
(
uöt32_t
 
ms
, 
uöt16_t
 
°ï
){

156 
uöt8_t
 
dividî
 = 
	`abs
(
_›î©i⁄
);

157 
uöt32_t
 
ªt
 = 0;

158 
_ms
 = 
ms
 * 
dividî
;

159 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

161 if–((
°ï
 +1Ë% 
dividî
) == 0 ){

162 
ªt
 = 
_ms
;

163 
_ñ≠£d_ms
 = 0;

166  
ªt
;

167 
	}
}

169 
uöt32_t
 
	g˛k
::
	$˛k_sync_mu…ùlõr
(
uöt32_t
 
ms
){

171 
_ms
 = 
ms
 / 
_›î©i⁄
;

172 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

173 
_ñ≠£d_ms
 = 0;

174 
_°ï_˙t
 = 0;

175  
_ms
;

176 
	}
}

178 
uöt32_t
 
	g˛k
::
	$˛k_ª£t
(){

179 
_ñ≠£d_ms
 = 0;

180 
_°ï_˙t
 = 0;

181  
_ms
;

182 
	}
}

184 
uöt32_t
 
	g˛k
::
	$˛k_sync
(
uöt32_t
 
ms
, 
uöt16_t
 
°ï
){

185 
uöt32_t
 
ªt
;

186 if(
_›î©i⁄
 < 0){

187 
ªt
 = 
	`˛k_sync_dividî
(
ms
, 
°ï
);

190 
ªt
 = 
	`˛k_sync_mu…ùlõr
(
ms
);

192  
ªt
;

193 
	}
}

195 
uöt32_t
 
	g˛k
::
	$˛k_sync_øtio
(
uöt32_t
 
ms
, 
uöt16_t
 
°ï
){

196 
uöt32_t
 
ªt
 = 0;

198 
_ms
 = 
ms
 * 
_numî©‹
 / 
_díomö©‹
;

199 
_bpm
 = 
	`ms_to_bpm
(
_ms
);

201 
Sîül
.
	`¥öt
("step ");

202 
Sîül
.
	`¥öt
(
°ï
);

203 
Sîül
.
	`¥öt
(" _numerator ");

204 
Sîül
.
	`¥öt
(
_numî©‹
);

205 
Sîül
.
	`¥öt
(" _ms ");

206 
Sîül
.
	`¥öén
(
_ms
);

212 
ªt
 = 
_ms
;

213 
_ñ≠£d_ms
 = 0;

214 
_°ï_˙t
 = 0;

216  
ªt
;

217 
	}
}

219 
uöt32_t
 
	g˛k
::
	$˛k_ñ≠£d
(){

220 
uöt32_t
 
ªt
 = 0;

221 if(
_ñ≠£d_ms
 > 
_ms
){

222 
_ñ≠£d_ms
 = 0;

223 
_°ï_˙t
 = (_°ï_˙à+ 1Ë% 
_max_°ï
;

224 
ªt
 = 
_ms
;

226  
ªt
;

227 
	}
}

229 
uöt32_t
 
	g˛k
::
	$ma°î_sync
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_˙t
){

230 
uöt32_t
 
ªt
 = 0;

233 if(
m°_ms
 > 0){

234 
ªt
 = 
	`˛k_sync
(
m°_ms
, 
m°_˙t
);

238 if–(
_›î©i⁄
 > 0Ë&& (
_°ï_˙t
 < (_operation - 1)) ){

239 
ªt
 = 
	`˛k_ñ≠£d
();

241  
ªt
;

242 
	}
}

243 
uöt32_t
 
	g˛k
::
	$ma°î_sync_øtio
(
uöt32_t
 
m°_ms
, 
uöt16_t
* 
m°_˙t
){

244 
uöt32_t
 
ªt
 = 0;

246 if(
m°_ms
){

247 
Sîül
.
	`¥öt
("mst_ms ");

248 
Sîül
.
	`¥öt
(
m°_ms
);

249 
Sîül
.
	`¥öt
(" _numerator ");

250 
Sîül
.
	`¥öt
(
_numî©‹
);

251 
Sîül
.
	`¥öt
(" mst_cnt ");

252 
Sîül
.
	`¥öén
(*
m°_˙t
);

255 if(
m°_ms
 > 0){

256 if(*
m°_˙t
 >
_numî©‹
){

257 
ªt
 = 
	`˛k_sync_øtio
(
m°_ms
, *
m°_˙t
);

258 *
m°_˙t
 = 1;

260 
Sîül
.
	`¥öén
("inc mst counter");

261 *
m°_˙t
 = *mst_cnt + 1;

265 } if(
_°ï_˙t
 < (
_díomö©‹
 - 1)){

266 
ªt
 = 
	`˛k_ñ≠£d
();

291  
ªt
;

292 
	}
}

	@clk.h

25 #i‚de‡
_LIB_CLK_H_


26 
	#_LIB_CLK_H_


	)

28 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

29 
	~<Arduöo.h
>

31 
	~<WProgøm.h
>

34 
	~<ñ≠£dMûlis.h
>

36 
	s˛k_def
 {

37 
uöt8_t
 
	mnumî©‹
;

38 
uöt8_t
 
	mdíomö©‹
;

43 ˛as†
	c˛k
 {

44 
	m¥iv©e
:

45 
uöt16_t
 
_°ï_˙t
;

46 
uöt8_t
 
	m_max_°ï
;

47 
uöt16_t
 
	m_bpm
;

48 
uöt32_t
 
	m_ms
;

49 
ñ≠£dMûlis
 
	m_ñ≠£d_ms
;

52 
	m_›î©i⁄
;

53 
boﬁón
 
	m_ªsync
;

54 
uöt8_t
 
	m_numî©‹
;

55 
uöt8_t
 
	m_díomö©‹
;

57 
	mpublic
:

58 
˛k
();

59 ~
˛k
();

61 
uöt32_t
 
˛k_gë_ms
();

62 
uöt16_t
 
˛k_gë_°ï_˙t
();

63 
uöt32_t
 
˛k_gë_ñ≠£d_ms
();

64 
uöt16_t
 
˛k_gë_bpm
();

66 
˛k_£t_ms
(
uöt32_t
);

67 
˛k_£t_bpm
(
uöt16_t
);

68 
˛k_bpms_to_bpm
(
uöt32_t
);

69 
˛k_gë_›î©‹
();

71 
˛k_£t_max_°ï
(
uöt8_t
);

73 
boﬁón
 
˛k_£t_›î©i⁄
(, 
uöt32_t
);

74 
boﬁón
 
˛k_£t_øtio
(
uöt32_t
, 
uöt8_t
, uint8_t);

75 
˛k_sync_öã∫
(
uöt32_t
);

76 
uöt32_t
 
˛k_ª£t
();

78 
uöt32_t
 
˛k_ñ≠£d
();

79 
uöt32_t
 
˛k_sync_dividî
(uöt32_t, 
uöt16_t
);

80 
uöt32_t
 
˛k_sync_mu…ùlõr
(uint32_t);

81 
uöt32_t
 
˛k_sync
(uöt32_t, 
uöt16_t
);

82 
uöt32_t
 
˛k_sync_øtio
(uöt32_t, 
uöt16_t
);

84 
uöt32_t
 
ma°î_sync
(uöt32_t, 
uöt16_t
);

85 
uöt32_t
 
ma°î_sync_øtio
(uöt32_t, 
uöt16_t
*);

	@fct_clbk.cpp

1 
	~"f˘_˛bk.h
"

3 * 
	gf˘_˛bk
::
	$gë_f˘_«me
(){

4  
_f˘_«me
;

5 
	}
}

6 
	gf˘_˛bk
::
	$£t_f˘_«me
(* 
«me
){

7 
_f˘_«me
 = 
«me
;

8 
	}
}

	@fct_clbk.h

1 #i‚de‡
__FCT_CLBK_H__


2 
	#__FCT_CLBK_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 ˛as†
	cf˘_˛bk
 {

11 
	m¥iv©e
:

12 * 
_f˘_«me
;

14 
	mpublic
:

15 * 
gë_f˘_«me
();

16 
£t_f˘_«me
(* 
°r
);

18 
vútuÆ
 
⁄_push
(
uöt8_t
 
bä_id
) = 0;

19 
vútuÆ
 
⁄_l⁄g_push
(
uöt8_t
 
bä_id
) = 0;

20 
vútuÆ
 
⁄_ªÀa£
(
uöt8_t
 
bä_id
) = 0;

21 
vútuÆ
 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
) = 0;

22 
vútuÆ
 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
) = 0;

24 
vútuÆ
 
⁄_°¨t
() = 0;

25 
vútuÆ
 
⁄_Àave
() = 0;

	@gate.cpp

25 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

26 
	~<Arduöo.h
>

28 
	~<WProgøm.h
>

32 
	~<öây≥s.h
>

34 
	~"g©e.h
"

36 
	$uöt8_t
 (*
_hw_wr_cbck
)(
uöt8_t
, uint8_t);

38 
g©e
::
	$g©e
(){

39 
_g©e_vÆue
 = 
DEFAULT_VEL
;

40 
_g©e_off
 = 
GATE_OFF
;

41 
_g©e_Àn
 = 0;

42 
_g©e_°©e
 = 
GATE_FINISHED
;

43 
	}
}

45 
	gg©e
::
	$g©e
(
uöt8_t
 
p‹t
, 
	$uöt8_t
 (*
hw_wr
)(
uöt8_t
, uint8_t)){

46 
_g©e_vÆue
 = 
DEFAULT_VEL
;

47 
_g©e_off
 = 
GATE_OFF
;

48 
_g©e_Àn
 = 0;

49 
_g©e_°©e
 = 
GATE_FINISHED
;

50 
_p‹t
 = 
p‹t
;

51 
_hw_wr_cbck
 = 
hw_wr
;

52 
	}
}

54 
	gg©e
::~
	$g©e
(){

55 
	}
}

57 
g©e
::
	$£t_g©e_åig_lvl
(
boﬁ
 
åig_lvl
, 
uöt8_t
 
vñ
){

58 if(
åig_lvl
){

59 
_g©e_vÆue
 = 
vñ
;

60 
_g©e_off
 = 
GATE_OFF
;

63 
_g©e_vÆue
 = 
GATE_OFF
;

64 
_g©e_off
 = 
vñ
;

66 
	}
}

68 
	gg©e
::
	$£t_g©e_Àn
(
uöt32_t
 
ms
){

69 
_g©e_Àn
 = 
ms
;

70 
	}
}

72 
	gg©e
::
	$£t_hw_cbck
(
uöt8_t
 
p‹t
, 
	$uöt8_t
 (*
hw_wr
)(
uöt8_t
, uint8_t)){

73 
_p‹t
 = 
p‹t
;

74 
_hw_wr_cbck
 = 
hw_wr
;

75 
	}
}

77 
	gg©e
::
	$r°_g©e
(
uöt8_t
 
g©e_vÆ
){

81 
_g©e_vÆue
 = 
g©e_vÆ
;

82 
_ñ≠£d_ms
 = 0;

83 if(
_hw_wr_cbck
Ë
	`_hw_wr_cbck
(
_p‹t
, 
_g©e_vÆue
);

84 
_g©e_°©e
 = 
GATE_STARTED
;

86  
GATE_STARTED
;

87 
	}
}

88 
	gg©e
::
	$r°_g©e
(){

92 
_ñ≠£d_ms
 = 0;

93 if(
_hw_wr_cbck
Ë
	`_hw_wr_cbck
(
_p‹t
, 
_g©e_vÆue
);

94 
_g©e_°©e
 = 
GATE_STARTED
;

96  
GATE_STARTED
;

97 
	}
}

98 
	gg©e
::
	$upd_g©e
(){

102 if(
_g©e_°©e
 !
GATE_STARTED
)

103  
GATE_FINISHED
;

105 if(
_ñ≠£d_ms
 > 
_g©e_Àn
){

106 if(
_hw_wr_cbck
Ë
	`_hw_wr_cbck
(
_p‹t
, !
_g©e_off
);

107 
_g©e_°©e
 = 
GATE_FINISHED
;

109  ()
_g©e_°©e
;

110 
	}
}

	@gate.h

25 #i‚de‡
_LIB_GATE_H_


26 
	#_LIB_GATE_H_


	)

28 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

29 
	~<Arduöo.h
>

31 
	~<WProgøm.h
>

34 
	~<ñ≠£dMûlis.h
>

36 
	#GATE_HIGH
 127

	)

37 
	#GATE_LOW
 0

	)

39 
	#DEFAULT_VEL
 127

	)

40 
	#GATE_OFF
 0

	)

42 
	#GATE_ERROR
 0

	)

43 
	#GATE_STARTED
 1

	)

44 
	#GATE_FINISHED
 2

	)

46 ˛as†
	cg©e
 {

47 
	m¥iv©e
:

48 
uöt8_t
 
_g©e_vÆue
;

49 
uöt8_t
 
	m_g©e_off
;

50 
uöt32_t
 
	m_g©e_Àn
;

51 
ñ≠£dMûlis
 
	m_ñ≠£d_ms
;

52 
uöt8_t
 
	m_p‹t
;

53 
	m_g©e_°©e
;

55 
	mpublic
:

56 
g©e
();

58 
g©e
(
uöt8_t
, 
	$uöt8_t
 (*
hw_wr
)(
uöt8_t
, uint8_t));

59 ~
	`g©e
();

62 
	`£t_g©e_Àn
(
uöt32_t
);

63 
	`£t_hw_cbck
(
uöt8_t
, 
	$uöt8_t
 (*
hw_wr
)(
uöt8_t
, uint8_t));

64 
	`£t_g©e_åig_lvl
(
boﬁ
 
åig_lvl
, 
uöt8_t
);

66 
	`r°_g©e
(
uöt8_t
);

67 
	`r°_g©e
();

68 
	`upd_g©e
();

	@gui.cpp

1 
	~"gui.h
"

3 (*
ª‰esh_f˘
)(**);

5 
	$dummy_f˘
(** 
°r
){

6 
Sîül
.
	`¥öén
(
°r
[0]);

7 
Sîül
.
	`¥öén
(
°r
[1]);

8 
Sîül
.
	`¥öén
(
°r
[2]);

9 
	}
}

12 
	ggui
::
	$gui
(){

13 
ª‰esh_f˘
 = 
dummy_f˘
;

14 
	}
}

16 
	ggui
::~
	$gui
(){

17 
	}
}

19 
gui
::
	$öô_gui
((*
f˘
)(**)){

20 
ª‰esh_f˘
 = 
f˘
;

21 
	}
}

23 
uöt8_t
 
	ggui
::
	$upd_buf
(* 
°r
, 
löe_idx
){

24 
uöt8_t
 
ªs
 = 1;

26 if(
löe_idx
 < 
GUI_NR_LINES
){

27 
buf„r
[
löe_idx
] = 
°r
;

30 
ªs
 = 0;

32  
ªs
;

33 
	}
}

34 
	ggui
::
	$ª‰esh
(){

35 
	`ª‰esh_f˘
–(**Ë&
buf„r
);

36 
	}
}

	@gui.h

1 #i‚de‡
__GUI_H__


2 
	#__GUI_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

11 
	#GUI_NR_LINES
 3

	)

12 
	#GUI_NR_CHAR_PER_LINE
 7

	)

14 ˛as†
	cgui
 {

15 
	m¥iv©e
:

16  * 
buf„r
[
GUI_NR_CHAR_PER_LINE
];

18 
	mpublic
:

19 
gui
();

20 ~
gui
();

21 
öô_gui
((*
f˘
)(**));

22 
uöt8_t
 
	`upd_buf
(* 
löe
, 
idx
);

23 
	`ª‰esh
();

	@led_animation.h

25 #i‚de‡
__LED_ANIMATION_H__


26 
	#__LED_ANIMATION_H__


	)

28 
	~"ty≥s.h
"

29 
	~"Àd_m©rix.h
"

31 ˛as†
	cÀd_™im©i⁄
 {

32 
	m¥iv©e
:

33 
Àd_m©rix
* 
_lm
;

34 
boﬁón
 
	m°©e
;

35 
uöt8_t
 
	mÀd_id
;

36 
uöt8_t
 
	mcﬁ‹
;

38 
	mpublic
:

39 
vútuÆ
 
°¨t_™im©i⁄
() = 0;

40 
vútuÆ
 
upd©e_™im©i⁄
() = 0;

41 
vútuÆ
 
°›_™im©i⁄
() = 0;

	@led_matrix.cpp

25 
	~"Àd_m©rix.h
"

26 
	~"bô.h
"

29 
	gÀd_m©rix
::
	$Àd_m©rix
(){

30 
i
=0;i<
LED_MATRIX_NR_GROUND
;i++){

31 
j
=0;j<
LED_MATRIX_NR_COLORS
;j++){

32 
Àd_¨r
[
i
].
bôm≠
[
j
] = 0x0;

35 
i
=0;i<
NR_LEDS
;i++){

36 
j
=0;j<
NR_LEVELS
;j++){

37 
_Àd_°©us_¨r
[
i
].
cﬁ‹
[
j
] = 0;

39 
_Àd_°©us_¨r
[
i
].
bmp
 = 0x0;

41 
	}
}

43 
	gÀd_m©rix
::~
	$Àd_m©rix
(){

44 
	}
}

46 
Àd_t
* 
Àd_m©rix
::
	$gë_Àd_¨r
(){

47  
Àd_¨r
;

48 
	}
}

50 
uöt8_t
 
	gÀd_m©rix
::
	$gë_Àd_x_°©e
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
x
, uöt16_à
y
){

51  (
Àd_¨r
[
x
].
bôm≠
[
cﬁ‹
] >> 
y
) & 0x1;

52 
	}
}

53 
	gÀd_m©rix
::
	$£t_Àd_x_°©e
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
x
, uöt16_à
y
, uöt8_à
°©e
){

54 
Àd_¨r
[
x
].
bôm≠
[
cﬁ‹
] |(
°©e
<<
y
);

55 
	}
}

58 
	gÀd_m©rix
::
	$£t_Àd_x_co‹
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
x
, uöt16_à
y
){

59 
ªs
 = 0;

60 
Àd_¨r
[
x
].
bôm≠
[
cﬁ‹
] |(1<<
y
);

61  
ªs
;

62 
	}
}

64 
	gÀd_m©rix
::
	$˛r_Àd_x_co‹
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
x
, uöt16_à
y
){

65 
ªs
 = 0;

66 
Àd_¨r
[
x
].
bôm≠
[
cﬁ‹
] &~(1<<
y
);

67  
ªs
;

68 
	}
}

70 
	gÀd_m©rix
::
	$toogÀ_Àd_x_co‹
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
x
, uöt16_à
y
){

71 
ªs
 = 0;

72 
Àd_¨r
[
x
].
bôm≠
[
cﬁ‹
] ^(1<<
y
);

73  
ªs
;

74 
	}
}

76 
	gÀd_m©rix
::
	$£t_Àd_x
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
ƒ
){

77 
uöt16_t
 
x
 = 
ƒ
 / 
LED_MATRIX_NR_LEDS
;

78 
uöt16_t
 
y
 = 
ƒ
 % 
LED_MATRIX_NR_LEDS
;

79 
uöt16_t
 
idx
;

81 
	`f‹_óch£t_bô
(
idx
,(
uöt16_t
 *Ë&
cﬁ‹
, 
LED_MATRIX_NR_COLORS
){

82 
	`£t_Àd_x_co‹
(
idx
,
x
,
y
);

86 
	}
}

90 
	gÀd_m©rix
::
	$˛r_Àd_x
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
ƒ
){

91 
uöt16_t
 
x
 = 
ƒ
 / 
LED_MATRIX_NR_LEDS
;

92 
uöt16_t
 
y
 = 
ƒ
 % 
LED_MATRIX_NR_LEDS
;

93 
uöt16_t
 
idx
;

95 
	`f‹_óch£t_bô
(
idx
,(
uöt16_t
 *Ë&
cﬁ‹
, 
LED_MATRIX_NR_COLORS
){

96 
	`˛r_Àd_x_co‹
(
idx
,
x
,
y
);

100 
	}
}

102 
	gÀd_m©rix
::
	$toogÀ_Àd_x
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
ƒ
){

103 
uöt16_t
 
x
 = 
ƒ
 / 
LED_MATRIX_NR_LEDS
;

104 
uöt16_t
 
y
 = 
ƒ
 % 
LED_MATRIX_NR_LEDS
;

105 
uöt16_t
 
idx
;

107 
	`f‹_óch£t_bô
(
idx
,(
uöt16_t
 *Ë&
cﬁ‹
, 
LED_MATRIX_NR_COLORS
){

108 
	`toogÀ_Àd_x_co‹
(
idx
,
x
,
y
);

112 
	}
}

114 
Àd_t
 
	gÀd_m©rix
::
	$gë_Àd
(
uöt8_t
 
x
){

115  
Àd_¨r
[
x
];

116 
	}
}

119 
	gÀd_m©rix
::
	$ßve_n_£t
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
ƒ
, uöt8_à
ground
){

120 
boﬁ
 
Êg
 = 
Ál£
;

121 
boﬁ
 
fú°
 = 
Ál£
;

122 
ªt
 = 0;

124 if(
_Àd_°©us_¨r
[
ƒ
].
bmp
 == 0){

125 
_Àd_°©us_¨r
[
ƒ
].
bmp
 = (1 << 
ground
);

126 
_Àd_°©us_¨r
[
ƒ
].
cﬁ‹
[
ground
] = color;

127 
	`£t_Àd_x
(
cﬁ‹
, 
ƒ
);

129 if(
BIT
::
	`is_bô_£t
(
_Àd_°©us_¨r
[
ƒ
].
bmp
, 
ground
)){

130 
ªt
 = -1;

132 
uöt8_t
 
Àvñ_hi
 = 
BIT
::
	`gë_highe°_bô_£t
(
_Àd_°©us_¨r
[
ƒ
].
bmp
);

133 
_Àd_°©us_¨r
[
ƒ
].
bmp
 |(1 << 
ground
);

134 
_Àd_°©us_¨r
[
ƒ
].
cﬁ‹
[
ground
] = color;

136 if(
Àvñ_hi
 < 
ground
){

137 
	`Àd_ovw
(
cﬁ‹
, 
ƒ
);

140  
ªt
;

142 
	}
}

143 
	gÀd_m©rix
::
	$ßve_n_toogÀ
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
ƒ
, uöt8_à
ground
){

144 
boﬁ
 
Êg
 = 
Ál£
;

145 
boﬁ
 
fú°
 = 
Ál£
;

146 
ªt
 = 0;

148 if(
ground
 > 0){

149 
ªt
 = -1;

154 
_Àd_°©us_¨r
[
ƒ
].
bmp
 = (1 << 
ground
);

155 
_Àd_°©us_¨r
[
ƒ
].
cﬁ‹
[
ground
] = color;

156 
	`toogÀ_Àd_x
(
cﬁ‹
, 
ƒ
);

158  
ªt
;

160 
	}
}

161 
	gÀd_m©rix
::
	$˛r_n_ª°‹e
(
uöt16_t
 
ƒ
, 
uöt8_t
 
ground
){

162 
	`˛r_Àd_x
(
_Àd_°©us_¨r
[
ƒ
].
cﬁ‹
[
ground
],Çr);

163 
_Àd_°©us_¨r
[
ƒ
].
cﬁ‹
[
ground
] = 0;

164 
_Àd_°©us_¨r
[
ƒ
].
bmp
 &~(1<<
ground
);

166 if(
_Àd_°©us_¨r
[
ƒ
].
bmp
){

167 
uöt8_t
 
Àvñ_hi
 = 
BIT
::
	`gë_highe°_bô_£t
(
_Àd_°©us_¨r
[
ƒ
].
bmp
);

168 
Sîül
.
	`¥öt
("restore high ");

169 
Sîül
.
	`¥öt
(
Àvñ_hi
);

170 
Sîül
.
	`¥öt
("Çr ");

171 
Sîül
.
	`¥öén
(
ƒ
);

172 
	`£t_Àd_x
(
_Àd_°©us_¨r
[
ƒ
].
cﬁ‹
[
Àvñ_hi
],Çr);

174 
	}
}

175 
	gÀd_m©rix
::
	$Àd_off
(
uöt16_t
 
ƒ
){

176 
i
=0;i<
LED_MATRIX_NR_COLORS
;i++){

177 
	`˛r_Àd_x
(
i
, 
ƒ
);

179 
	}
}

180 
	gÀd_m©rix
::
	$Àd_ovw
(
uöt8_t
 
cﬁ‹
, 
uöt16_t
 
ƒ
){

181 
i
=0;i<
LED_MATRIX_NR_COLORS
;i++){

182 
	`˛r_Àd_x
(
i
, 
ƒ
);

184 
	`£t_Àd_x
(
cﬁ‹
, 
ƒ
);

185 
	}
}

187 
	gÀd_m©rix
::
	$dump_Àd_m©rix
(){

188 
i
=0;i<
LED_MATRIX_NR_GROUND
;i++){

189 
j
=0;j<
LED_MATRIX_NR_COLORS
;j++){

190 
Sîül
.
	`¥öt
("led_arr[");

191 
Sîül
.
	`¥öt
(
i
);

192 
Sîül
.
	`¥öt
("].bitmap[");

193 
Sîül
.
	`¥öt
(
j
);

194 
Sîül
.
	`¥öt
("] = ");

195 
Sîül
.
	`¥öén
(
Àd_¨r
[
i
].
bôm≠
[
j
]);

198 
	}
}

	@led_matrix.h

25 #i‚de‡
__LED_MATRIX_H__


26 
	#__LED_MATRIX_H__


	)

28 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

29 
	~<Arduöo.h
>

31 
	~<WProgøm.h
>

34 
	~"ty≥s.h
"

35 
	~<LökedLi°.h
>

36 
	~"Àd_°©e.h
"

38 
	#LED_MATRIX_NR_LEDS
 
MATRIX_NR_ROW


	)

39 
	#LED_MATRIX_NR_GROUND
 
MATRIX_NR_COL


	)

40 
	#LED_MATRIX_NR_COLORS
 3

	)

41 
	#NR_LEDS
 (
LED_MATRIX_NR_LEDS
*
LED_MATRIX_NR_GROUND
)

	)

43 
	#LED_R_IDX
 0x1

	)

44 
	#LED_G_IDX
 0x2

	)

45 
	#LED_B_IDX
 0x4

	)

46 
	#LED_RG_IDX
 (
LED_R_IDX
|
LED_G_IDX
)

	)

47 
	#LED_RB_IDX
 (
LED_R_IDX
|
LED_B_IDX
)

	)

48 
	#LED_GB_IDX
 (
LED_G_IDX
|
LED_B_IDX
)

	)

49 
	#LED_GBR_IDX
 (
LED_GB_IDX
|
LED_R_IDX
)

	)

51 
	#BACKGROUND
 0

	)

52 
	#FOREGROUND1
 1

	)

53 
	#FOREGROUND2
 2

	)

54 
	#NR_LEVELS
 3

	)

58 
m©_row_bmp_t
 
	mbôm≠
[
LED_MATRIX_NR_COLORS
];

59 } 
	tÀd_t
;

61 
	sÀd_°©us
 {

62 
uöt8_t
 
	mcﬁ‹
[
NR_LEVELS
];

63 
uöt8_t
 
	mbmp
;

66 ˛as†
	cÀd_m©rix
 {

67 
	m¥iv©e
:

68 
Àd_t
 
Àd_¨r
[
LED_MATRIX_NR_GROUND
];

69 
Àd_°©us
 
	m_Àd_°©us_¨r
[
NR_LEDS
];

71 
	mpublic
:

72 
Àd_m©rix
();

73 ~
Àd_m©rix
();

75 
Àd_t
* 
gë_Àd_¨r
();

76 
Àd_t
 
gë_Àd
(
uöt8_t
);

78 
uöt8_t
 
gë_Àd_x_°©e
(uöt8_t, 
uöt16_t
, uint16_t);

79 
£t_Àd_x_°©e
(
uöt8_t
, 
uöt16_t
, uint16_t, uint8_t);

81 
£t_Àd_x
(
uöt8_t
, 
uöt16_t
);

82 
˛r_Àd_x
(
uöt8_t
, 
uöt16_t
);

83 
toogÀ_Àd_x
(
uöt8_t
, 
uöt16_t
);

85 
£t_Àd_x_co‹
(
uöt8_t
, 
uöt16_t
, uint16_t);

86 
˛r_Àd_x_co‹
(
uöt8_t
, 
uöt16_t
, uint16_t);

87 
toogÀ_Àd_x_co‹
(
uöt8_t
, 
uöt16_t
, uint16_t);

92 
ßve_n_£t
(
uöt8_t
, 
uöt16_t
, uint8_t);

93 
ßve_n_toogÀ
(
uöt8_t
, 
uöt16_t
, uint8_t);

94 
˛r_n_ª°‹e
(
uöt16_t
, 
uöt8_t
);

96 
Àd_off
(
uöt16_t
);

97 
Àd_ovw
(
uöt8_t
, 
uöt16_t
);

99 
dump_Àd_m©rix
();

	@led_state.h

1 #i‚de‡
__LED_STATUS_H__


2 
	#__LED_STATUS_H__


	)

4 ˛as†
	cÀd_°©e
 {

5 
	mpublic
:

6 
uöt8_t
 
_cﬁ‹
;

7 
uöt8_t
 
	m_¥io
;

8 
boﬁ
 
	m_ö_u£
;

9 
	$Àd_°©e
(){

10 
_ö_u£
 = 
Ál£
;

12 
	$Àd_°©e
(
uöt8_t
 
cﬁ‹
, uöt8_à
¥io
){

13 
_cﬁ‹
 = 
cﬁ‹
;

14 
_¥io
 = 
¥io
;

15 
_ö_u£
 = 
Ál£
;

16 
	}
}

17 ~
	$Àd_°©e
(){
	}
};

	@led_toogle.cpp

1 
	~"Àd_toogÀ.h
"

3 
	#STARTED
 
åue


	)

4 
	#STOPPED
 
Ál£


	)

6 
	gÀd_toogÀ
::
	$Àd_toogÀ
(){

7 
	}
}

9 
Àd_toogÀ
::
	$Àd_toogÀ
(
Àd_m©rix
* 
lm
, 
uöt16_t
 
Àd_id
, 
uöt8_t
 
cﬁ‹
){

10 
_lm
 = 
lm
;

11 
_Àd_id
 = 
Àd_id
;

12 
_cﬁ‹
 = 
cﬁ‹
;

13 
_°©e
 = 
STOPPED
;

14 
	}
}

15 
	gÀd_toogÀ
::~
	$Àd_toogÀ
(){

16 
	}
}

18 
Àd_toogÀ
::
	$tu∫_⁄_Àd
(){

19 
_lm
->
	`£t_Àd_x
(
_cﬁ‹
, 
_Àd_id
);

20 
	}
}

21 
	gÀd_toogÀ
::
	$tu∫_off_Àd
(){

22 
_lm
->
	`˛r_Àd_x
(
_cﬁ‹
, 
_Àd_id
);

23 
	}
}

24 
	gÀd_toogÀ
::
	$tu∫_⁄_n_ßve_Àd
(){

25 
_lm
->
	`ßve_n_£t
(
_cﬁ‹
, 
_Àd_id
, 
FOREGROUND2
);

26 
	}
}

27 
	gÀd_toogÀ
::
	$tu∫_off_n_ª°‹e_Àd
(){

28 
_lm
->
	`˛r_n_ª°‹e
(
_Àd_id
, 
FOREGROUND2
);

29 
	}
}

33 
	gÀd_toogÀ
::
	$öô_™im©i⁄
(
Àd_m©rix
* 
lm
, 
uöt16_t
 
Àd_id
, 
uöt8_t
 
cﬁ‹
){

34 
_lm
 = 
lm
;

35 
_Àd_id
 = 
Àd_id
;

36 
_cﬁ‹
 = 
cﬁ‹
;

37 
_°©e
 = 
STOPPED
;

38 
	}
}

41 
	gÀd_toogÀ
::
	$°¨t_™im©i⁄
(
uöt32_t
 
ms
){

42 
ªt
 = 0;

43 
_™im©i⁄_time
 = 
ms
;

44 
_°©e
 = 
STARTED
;

45 
_time_˙t
 = 0;

47  
ªt
;

48 
	}
}

50 
	gÀd_toogÀ
::
	$upd©e_™im©i⁄
(){

51 
ªt
 = 0;

53 if(
_°©e
 =
STARTED
){

54 if(
_time_˙t
 >
_™im©i⁄_time
){

55 
_lm
->
	`toogÀ_Àd_x
(
_cﬁ‹
, 
_Àd_id
);

56 
_time_˙t
 = 0;

57 
ªt
 = 1;

58 
_°©e
 = 
STOPPED
;

62  
ªt
;

63 
	}
}

64 
	gÀd_toogÀ
::
	$öô_™im©i⁄_n_ßve
(
Àd_m©rix
* 
lm
, 
uöt16_t
 
Àd_id
, 
uöt8_t
 
cﬁ‹
){

65 
_lm
 = 
lm
;

66 
_Àd_id
 = 
Àd_id
;

67 
_cﬁ‹
 = 
cﬁ‹
;

68 
_°©e
 = 
STOPPED
;

69 
	`tu∫_⁄_n_ßve_Àd
();

70 
	}
}

72 
	gÀd_toogÀ
::
	$íd_™im©i⁄_n_ª°‹e
(){

73 
ªt
 = 0;

75 if(
_°©e
 =
STARTED
){

76 if(
_time_˙t
 >
_™im©i⁄_time
){

77 
	`tu∫_off_n_ª°‹e_Àd
();

78 
_time_˙t
 = 0;

79 
ªt
 = 1;

80 
_°©e
 = 
STOPPED
;

84  
ªt
;

85 
	}
}

87 
	gÀd_toogÀ
::
	$°›_™im©i⁄
(){

88 
_°©e
 = 
STOPPED
;

89 
	}
}

	@led_toogle.h

1 #i‚de‡
__LED_TOOGLE_H__


2 
	#__LED_TOOGLE_H__


	)

5 
	~<ñ≠£dMûlis.h
>

6 
	~"Àd_m©rix.h
"

8 
	#LED_ON
 
åue


	)

9 
	#LED_OFF
 
Ál£


	)

10 
	#MODE_ONE_SHOT
 
åue


	)

13 ˛as†
	cÀd_toogÀ
 {

14 
	m¥iv©e
:

15 
ñ≠£dMûlis
 
_time_˙t
;

16 
Àd_m©rix
* 
	m_lm
;

17 
boﬁón
 
	m_°©e
;

18 
uöt16_t
 
	m_Àd_id
;

19 
uöt8_t
 
	m_cﬁ‹
;

20 
uöt32_t
 
	m_™im©i⁄_time
;

24 
	mpublic
:

25 
Àd_toogÀ
();

26 
Àd_toogÀ
(
Àd_m©rix
* 
lm
, 
uöt16_t
 
Àd_id
, 
uöt8_t
 
cﬁ‹
);

27 ~
Àd_toogÀ
();

29 
tu∫_⁄_Àd
();

30 
tu∫_off_Àd
();

31 
tu∫_⁄_n_ßve_Àd
();

32 
tu∫_off_n_ª°‹e_Àd
();

35 
öô_™im©i⁄
(
Àd_m©rix
* 
lm
, 
uöt16_t
 
Àd_id
, 
uöt8_t
 
cﬁ‹
);

36 
°¨t_™im©i⁄
(
uöt32_t
 );

37 
upd©e_™im©i⁄
( );

38 
°›_™im©i⁄
();

39 
öô_™im©i⁄_n_ßve
(
Àd_m©rix
* 
lm
, 
uöt16_t
 
Àd_id
, 
uöt8_t
 
cﬁ‹
);

40 
íd_™im©i⁄_n_ª°‹e
();

	@matrix.ino

24 
	~<i2c_t3.h
>

25 
	~<Ada‰uô_MCP23017.h
>

27 
	~"ty≥s.h
"

28 
	~"Àd_m©rix.h
"

29 
	~"Boun˚_¨øy.h
"

32 
	#œtchPö
 22

	)

33 
	#˛ockPö
 23

	)

34 
	#d©aPö
 21

	)

36 
	#GRD_OFFSET
 0

	)

37 
	#BLUE_OFFSET
 16

	)

38 
	#GREEN_OFFSET
 24

	)

39 
	#RED_OFFSET
 8

	)

47 
	#BTN_NUM_COL
 8

	)

48 
	#BTN_NUM_ROW
 8

	)

49 
	#BOUNCE_TIME
 5

	)

51 
	#DEBUG
 1

	)

52 
	#LONG_PRESS_TIME_MS
 1000

	)

54 
Ada‰uô_MCP23017
 
	gm˝
;

55 
uöt8_t
 
	ggrd_˙t
;

57 
ñ≠£dMûlis
 
	gbä_ms_˙t
[
NR_LEDS
];

58 
	s_bä_°©us
 {

59 
byã
 
	mpushed_bmp
[
BTN_NUM_COL
];

60 
byã
 
	ml⁄g_pushed_bmp
[
BTN_NUM_COL
];

62 
_bä_°©us
 
	gbä_°©us
;

64 
uöt8_t
 
	gbä_£À˘_pös
[
BTN_NUM_COL
] = {3,2,1,0,12,13,14,15};

65 
uöt8_t
 
	gbä_ªad_pös
[
BTN_NUM_ROW
] = {7,8,6,9,5,10,4,11};

71 
AºBoun˚
 
	gbä_row
[
BTN_NUM_COL
];

73 
uöt8_t
 
	$bä_m©rix_digôÆRód
(
uöt8_t
 
pö
){

74  
m˝
.
	`digôÆRód
(
pö
);

75 
	}
}

76 
	$öô_m©rix_bä
(){

77 
i
;

78 
bä_cﬁ_idx
 = 0;

79 
Êag_bä_a˘ive
 = 
Ál£
;

81 
m˝
.
	`begö
(6);

82 
Wúe
.
	`£tClock
(1000000);

84 
i
=0;i<
BTN_NUM_COL
;i++){

85 
bä_row
[
i
].
	`öô_AºBoun˚
(
bä_ªad_pös
, 
BOUNCE_TIME
, 
BTN_NUM_ROW
, &
bä_m©rix_digôÆRód
);

86 
bä_°©us
.
pushed_bmp
[
i
] = 0x0;

87 
bä_°©us
.
l⁄g_pushed_bmp
[
i
] = 0x0;

90 
i
=0;i<
BTN_NUM_COL
;i++){

91 
m˝
.
	`pöMode
(
bä_£À˘_pös
[
i
], 
OUTPUT
);

92 
m˝
.
	`digôÆWrôe
(
bä_£À˘_pös
[
i
], 
HIGH
);

96 
i
=0;i<
BTN_NUM_ROW
;i++){

97 
m˝
.
	`pöMode
(
bä_ªad_pös
[
i
], 
INPUT
);

98 
m˝
.
	`puŒUp
(
bä_ªad_pös
[
i
], 
HIGH
);

100 
	}
}

102 
	$sˇn
(
¥og
* 
p
){

103 
uöt8_t
 
i
;

106 
m˝
.
	`digôÆWrôe
(
bä_£À˘_pös
[
bä_cﬁ_idx
], 
LOW
);

109 
i
=0; i<
BTN_NUM_ROW
; i++){

110 if(
bä_row
[
bä_cﬁ_idx
].
	`upd©e
(
i
)){

112 if(
bä_row
[
bä_cﬁ_idx
].
	`ªad
(
i
Ë=
HIGH
){

114 
Êag_bä_a˘ive
 = 
Ál£
;

115 if(
bä_°©us
.
l⁄g_pushed_bmp
[
bä_cﬁ_idx
] & (1<<
i
)){

117 
p
->
	`⁄_l⁄g_ªÀa£
(
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
);

120 
p
->
	`⁄_ªÀa£
(
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
);

122 
bä_°©us
.
pushed_bmp
[
bä_cﬁ_idx
] &~(1<<
i
);

123 
bä_°©us
.
l⁄g_pushed_bmp
[
bä_cﬁ_idx
] &~(1<<
i
);

126 #i‡
DEBUG


127 
Sîül
.
	`¥öt
("push btn ");

128 
Sîül
.
	`¥öén
(
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
);

130 
p
->
	`⁄_push
(
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
);

131 
Êag_bä_a˘ive
 = 
åue
;

132 
bä_ms_˙t
[
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
] = 0;

133 
bä_°©us
.
pushed_bmp
[
bä_cﬁ_idx
] |(1<<
i
);

136 if–(
bä_°©us
.
pushed_bmp
[
bä_cﬁ_idx
] & (1<<
i
))

137 && !(
bä_°©us
.
l⁄g_pushed_bmp
[
bä_cﬁ_idx
] & (1<<
i
))){

138 if(
bä_ms_˙t
[
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
] > 
LONG_PRESS_TIME_MS
){

139 
bä_°©us
.
l⁄g_pushed_bmp
[
bä_cﬁ_idx
] |(1<<
i
);

140 
p
->
	`⁄_l⁄g_push
(
bä_cﬁ_idx
*
BTN_NUM_COL
 + 
i
);

144 
m˝
.
	`digôÆWrôe
(
bä_£À˘_pös
[
bä_cﬁ_idx
], 
HIGH
);

145 
bä_cﬁ_idx
 = (bä_cﬁ_idx+1)%
BTN_NUM_COL
;

146 
	}
}

147 
	$wrôe_shi·_ªg
(
uöt32_t
 
vÆ
){

148 
	`digôÆWrôe
(
œtchPö
, 
LOW
);

149 
	`shi·Out
(
d©aPö
, 
˛ockPö
, 
LSBFIRST
, 
vÆ
);

150 
	`shi·Out
(
d©aPö
, 
˛ockPö
, 
LSBFIRST
, 
vÆ
 >> 8);

151 
	`shi·Out
(
d©aPö
, 
˛ockPö
, 
LSBFIRST
, 
vÆ
 >> 16);

152 
	`shi·Out
(
d©aPö
, 
˛ockPö
, 
LSBFIRST
, 
vÆ
 >> 24);

153 
	`digôÆWrôe
(
œtchPö
, 
HIGH
);

154 
	}
}

156 
	$upd_shi·_ªg
(
Àd_m©rix
* 
lm
){

157 
uöt32_t
 
tmp
 = ((1<<(
grd_˙t
 ))Ë<< 
GRD_OFFSET
;

158 
Àd_t
 
l
 = 
lm
->
	`gë_Àd
(
grd_˙t
);

159 
tmp
 |(
l
.
bôm≠
[
LED_COLOR_RED_INDEX
] << 
RED_OFFSET
)

160 | (
l
.
bôm≠
[
LED_COLOR_GREEN_INDEX
] << 
GREEN_OFFSET
)

161 | (
l
.
bôm≠
[
LED_COLOR_BLUE_INDEX
] << 
BLUE_OFFSET
);

163 
	`wrôe_shi·_ªg
(
tmp
);

164 
grd_˙t
 = (grd_˙à+ 1Ë% 
LED_MATRIX_NR_GROUND
;

165 
	}
}

166 
	$£tup_gui
(){

167 
	`pöMode
(
œtchPö
, 
OUTPUT
);

168 
	`pöMode
(
˛ockPö
, 
OUTPUT
);

169 
	`pöMode
(
d©aPö
, 
OUTPUT
);

171 
	`wrôe_shi·_ªg
(0x0);

172 
grd_˙t
 = 0;

173 
	}
}

	@menu.cpp

1 
	~"míu.h
"

3 
Àd_m©rix
* 
	$deÁu…_˛bk_func
–
uöt8_t
 
id1
, uöt8_à
id2
 ){

4 
Sîül
.
	`¥öt
("program ");

5 
Sîül
.
	`¥öt
(
id1
);

6 
Sîül
.
	`¥öén
(" hasÇo menu function");

7  
NULL
;

8 
	}
}

9 
	$deÁu…_íåy_func
(){

10 
	}
}

11 
	gmíu
::
	$míu
(){

12 
míu_˛bk
 
deÁu…_˛bk
;

13 
deÁu…_˛bk
.
˛bk_⁄_push
 = 
deÁu…_˛bk_func
;

14 
deÁu…_˛bk
.
˛bk_⁄_ªÀa£
 = 
deÁu…_˛bk_func
;

15 
deÁu…_˛bk
.
obj_±r
 = 
NULL
;

16 
deÁu…_˛bk
.
íãr
 = 
deÁu…_íåy_func
;

17 
deÁu…_˛bk
.
Àave
 = 
deÁu…_íåy_func
;

18 
deÁu…_˛bk
.
upd©e
 = 
deÁu…_íåy_func
;

20 
i
=0;i<
MATRIX_NR_COL
;i++){

21 
míu_˛bk_¨r
[
i
] = 
deÁu…_˛bk
;

22 
¥og_¨r
[
i
] = 
NULL
;

24 
	}
}

26 
	gmíu
::~
	$míu
(){

27 
	}
}

29 
Àd_m©rix
* 
míu
::
	$gë_míu_Àd_m©rix
(){

30  &
míu_öãrÁ˚
;

31 
	}
}

33 
	gmíu
::
	$£t_míu_¥og_íåy
(
uöt8_t
 
¥og_id
, 
¥og
* 
p
){

34 
¥og_¨r
[
¥og_id
] = 
p
;

35 
	}
}

37 
¥og
* 
	gmíu
::
	$gë_√xt_¥og
(){

38  
√xt_¥og
;

39 
	}
}

41 
	gmíu
::
	$£t_√xt_¥og
(
¥og
* 
p
){

42 
√xt_¥og
 = 
p
;

43 
	}
}

45 
	gmíu
::
	$míu_íãr
(){

46 
i
=0;i<
MATRIX_NR_COL
;i++){

47 
¥og
* 
p
 = 
¥og_¨r
[
i
];

48 if(
p
)

49 
p
->
	`míu_íãr
();

51 
	}
}

52 
	gmíu
::
	$míu_Àave
(){

53 
i
=0;i<
MATRIX_NR_COL
;i++){

54 
¥og
* 
p
 = 
¥og_¨r
[
i
];

55 if(
p
)

56 
p
->
	`míu_Àave
();

58 
	}
}

59 
	gmíu
::
	$míu_upd©e
(){

60 
i
=0;i<
MATRIX_NR_COL
;i++){

61 
¥og
* 
p
 = 
¥og_¨r
[
i
];

62 if(
p
)

63 
p
->
	`míu_upd©e
();

65 
	}
}

68 
	gmíu
::
	$míu_⁄_push
(
uöt8_t
, uint8_t){

69 
	}
}

70 
	gmíu
::
	$míu_⁄_ªÀa£
(
uöt8_t
, uint8_t){

71 
	}
}

73 
	gmíu
::
	$⁄_push
(
uöt8_t
 
bä_id
){

74 
uöt8_t
 
¥og_id
 = 
bä_id
 / 
MATRIX_NR_ROW
;

75 
uöt8_t
 
›t_id
 = 
bä_id
 % 
MATRIX_NR_COL
;

77 
¥og
* 
p
 = 
¥og_¨r
[
¥og_id
];

78 if(
p
)

79 
p
->
	`míu_⁄_push
(
¥og_id
, 
›t_id
);

80 
	}
}

81 
	gmíu
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

82 
uöt8_t
 
¥og_id
 = 
bä_id
 / 
MATRIX_NR_ROW
;

83 
uöt8_t
 
›t_id
 = 
bä_id
 % 
MATRIX_NR_COL
;

84 
ªt
;

86 
¥og
* 
p
 = 
¥og_¨r
[
¥og_id
];

88 if(
p
)

89 
ªt
 = 
p
->
	`míu_⁄_ªÀa£
(
¥og_id
, 
›t_id
);

91 if(
ªt
){

92 
√xt_¥og
 = 
p
;

94 
	}
}

96 
Àd_m©rix
* 
	gmíu
::
	$gë_Àd_m©rix
(){

97  &
míu_öãrÁ˚
;

98 
	}
}

99 
	gmíu
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

100 
	}
}

	@menu.h

1 #i‚de‡
__MENU_H__


2 
	#__MENU_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
	~"ty≥s.h
"

11 
	~"Àd_m©rix.h
"

12 
	~"¥og.h
"

15 
	$boﬁón
 (* 
	tmíu_˛bk_def
)(
	tuöt8_t
, uöt8_t, 
	tÀd_m©rix
*);

16 
Àd_m©rix
* (* 
	tmíu_˛bk_ty≥
)–
	tuöt8_t
, uint8_t );

17 (* 
	tmíu_íåy_ty≥
)();

19 
	smíu_˛bk
 {

20 
míu_˛bk_ty≥
 
˛bk_⁄_push
;

21 
míu_˛bk_ty≥
 
˛bk_⁄_ªÀa£
;

23 
míu_íåy_ty≥
 
íãr
;

24 
míu_íåy_ty≥
 
Àave
;

25 
míu_íåy_ty≥
 
upd©e
;

27 * 
obj_±r
;

30 ˛as†
	cmíu
: 
public
 
¥og
 {

31 
¥iv©e
:

32 
Àd_m©rix
 
míu_öãrÁ˚
;

33 
¥og
* 
√xt_¥og
;

34 
míu_˛bk
 
míu_˛bk_¨r
[
MATRIX_NR_COL
];

35 
¥og
* 
¥og_¨r
[
MATRIX_NR_COL
];

37 
public
:

39 
	`míu
();

40 ~
	`míu
();

42 
Àd_m©rix
* 
	`gë_míu_Àd_m©rix
();

43 
	`£t_míu_¥og_íåy
(
uöt8_t
 
¥og_id
, 
¥og
* 
p
);

45 
¥og
* 
	`gë_√xt_¥og
();

46 
	`£t_√xt_¥og
(
¥og
*);

48 
	`míu_íãr
();

49 
	`míu_Àave
();

50 
	`míu_upd©e
();

52 
	`míu_⁄_push
(
uöt8_t
, uint8_t);

53 
	`míu_⁄_ªÀa£
(
uöt8_t
, uint8_t);

55 
	`⁄_push
(
uöt8_t
 
bä_id
);

56 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){};

57 
	`⁄_ªÀa£
(
uöt8_t
 
bä_id
);

58 
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){
	}
};

59 
Àd_m©rix
* 
gë_Àd_m©rix
();

60 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

	@menu_btn.ino

25 
	~<i2c_t3.h
>

26 
	~<Boun˚2.h
>

28 
	~"Boun˚_¨øy.h
"

29 
	~"¥og.h
"

30 
	~"∑øm.h
"

32 
	#NR_MENU_BTN
 4

	)

33 
	#MENU_BTN_BOUNCE_TIME
 5

	)

34 
	#PIN_MENU_BTN
 17

	)

35 
	#PIN_PARAM_BTN
 16

	)

37 
	#FCT_BTN_IDLE
 0

	)

38 
	#FCT_BTN_RELEASED
 1

	)

39 
	#FCT_BTN_PUSHED
 2

	)

40 
uöt8_t
 
	g∑øm_bä_°©us
;

41 
uöt8_t
 
	gmíu_bä_°©us
;

44 
Boun˚
 
	gmíu_bä
 = Bounce();

45 
Boun˚
 
	g∑øm_bä
 = Bounce();

46 
∑øm
* 
	g∑øm_±r
;

62 
	$öô_míu_bä
(
¥og
* 
p
){

64 
∑øm_bä_°©us
 = 
FCT_BTN_IDLE
;

65 
míu_bä_°©us
 = 
FCT_BTN_IDLE
;

67 
	`pöMode
(
PIN_MENU_BTN
,
INPUT
);

68 
	`pöMode
(
PIN_PARAM_BTN
,
INPUT
);

69 
míu_bä
.
	`©èch
(
PIN_MENU_BTN
);

70 
míu_bä
.
	`öãrvÆ
(
MENU_BTN_BOUNCE_TIME
);

71 
∑øm_bä
.
	`©èch
(
PIN_PARAM_BTN
);

72 
∑øm_bä
.
	`öãrvÆ
(
MENU_BTN_BOUNCE_TIME
);

74 
∑øm_±r
 = 
NULL
;

77 
£quí˚±i⁄
.
míu_˘æ
.
	`£t_√xt_¥og
(
p
);

90 
	}
}

91 
	$sˇn_míu_bä
(){

92 if(
míu_bä
.
	`upd©e
()){

93 if(
míu_bä
.
	`„Œ
()){

94 
míu_bä_°©us
 = 
FCT_BTN_RELEASED
;

101 
míu_bä_°©us
 = 
FCT_BTN_PUSHED
;

107 if(
míu_bä_°©us
 =
FCT_BTN_RELEASED
){

108 if(!
Êag_bä_a˘ive
){

109 
cuºít_¥og
 = 
£quí˚±i⁄
.
míu_˘æ
.
	`gë_√xt_¥og
();

110 
cuºít_¥og
->
	`di•œy_tôÀ
();

111 
lm_±r
 = 
cuºít_¥og
->
	`gë_Àd_m©rix
();

112 
£quí˚±i⁄
.
míu_˘æ
.
	`míu_Àave
();

113 
míu_bä_°©us
 = 
FCT_BTN_IDLE
;

115 } if(
míu_bä_°©us
 =
FCT_BTN_PUSHED
){

116 if(!
Êag_bä_a˘ive
){

117 
£quí˚±i⁄
.
míu_˘æ
.
	`míu_íãr
();

118 
lm_±r
 = 
£quí˚±i⁄
.
míu_˘æ
.
	`gë_míu_Àd_m©rix
();

119 
cuºít_¥og
 = 
¥og_¨r
[
ƒ_¥og
];

120 
míu_bä_°©us
 = 
FCT_BTN_IDLE
;

123 
	}
}

124 
	$sˇn_∑øm_bä
(){

125 if(
∑øm_bä
.
	`upd©e
()){

126 if(
∑øm_bä
.
	`„Œ
(Ë&& 
∑øm_±r
){

127 
∑øm_bä_°©us
 = 
FCT_BTN_RELEASED
;

135 
∑øm_±r
 = 
cuºít_¥og
->
	`gë_∑øm
();

136 if(
∑øm_±r
){

137 
∑øm_bä_°©us
 = 
FCT_BTN_PUSHED
;

146 if(
∑øm_bä_°©us
 =
FCT_BTN_RELEASED
){

147 if(!
Êag_bä_a˘ive
){

148 
cuºít_¥og
 = 
∑øm_±r
->
	`gë_¥og
();

149 
lm_±r
 = 
cuºít_¥og
->
	`gë_Àd_m©rix
();

150 
∑øm_±r
->
	`∑øm_⁄_Àave
();

151 
∑øm_bä_°©us
 = 
FCT_BTN_IDLE
;

154 if(
∑øm_bä_°©us
 =
FCT_BTN_PUSHED
){

155 if(!
Êag_bä_a˘ive
){

156 
lm_±r
 = 
∑øm_±r
->
	`gë_Àd_m©rix
();

157 
cuºít_¥og
 = 
∑øm_±r
;

158 
∑øm_±r
->
	`∑øm_⁄_íãr
();

159 
∑øm_bä_°©us
 = 
FCT_BTN_IDLE
;

162 
	}
}

	@midi.ino

1 
	~<So·w¨eSîül.h
>

2 
	~<MIDI.h
>

3 
	~"˛k.h
"

4 
	~"£quí˚r.h
"

5 
	~"åack.h
"

6 
	~"ã°_¥oj_⁄e.h
"

8 
So·w¨eSîül
 
So·Sîül
(0, 1);

9 
MIDI_CREATE_INSTANCE
(
So·w¨eSîül
, 
So·Sîül
, 
MIDI
);

10 
˛k
 
	gmidi_sync
;

12 c⁄° 
uöt8_t
 
	gMIDI_DRUM_GM
[8] = {37, 36, 42, 82, 40, 38, 46, 44};

20 
	$midi_nŸe_⁄
(
uöt16_t
 
nŸe
, 
uöt8_t
 
vñ
, uöt8_à
ch™
){

21 if(
vñ
 > 0){

22 
MIDI
.
	`£ndNŸeOn
(
nŸe
, 
vñ
, 
ch™
);

25 
MIDI
.
	`£ndNŸeOff
(
nŸe
, 
vñ
, 
ch™
);

27 
	}
}

29 
	$öô_midi_£q
(
£quí˚r
* 
s
){

30 
åack
* 
t
;

31 
s
->
	`£t_cuºít_åack
(0);

32 
i
=0;i<
SEQUENCER_NR_TRACK
;i++){

33 
t
 = 
s
->
	`gë_åack
(
i
);

34 
t
->
	`£t_out_id
(
i
+1);

35 
t
->
	`£t_Æl_°ï_nŸe
(
MIDI_DRUM_GM
[
i
]);

36 
t
->
	`öô_hw_˛bk
(
midi_nŸe_⁄
);

39 
	}
}

42 
	$öô_midi_c⁄åﬁÀr
(
ã°_¥oj_⁄e
* 
p
){

43 
p
->
	`öô_hw_˛bk
(
midi_nŸe_⁄
);

44 
	}
}

46 
	$öô_midi
(){

47 
MIDI
.
	`begö
(
MIDI_CHANNEL_OMNI
);

48 
MIDI
.
	`tu∫ThruOff
();

51 
midi_sync
.
	`˛k_£t_øtio
(midi_sync.
	`˛k_gë_ms
(), 1, 
MIDI_SYNC_PPN
);

53 
	}
}

55 
	$midi_lo›
(
boﬁón
 
Êg
){

56 
MIDI
.
	`ªad
();

57 if(
Êg
){

58 
MIDI
.
	`£ndRólTime
(
MIDI_NAMESPACE
::
Clock
);

60 
	}
}

	@oled.ino

1 
	~"gui.h
"

2 
	~<SPI.h
>

3 
	~<SFE_Mi¸oOLED.h
>

8 
	#PIN_RESET
 8

9 
	#PIN_DC
 9

10 
	#PIN_CS
 10

11 
	#DC_JUMPER
 0

	)

13 
	#OLED_X_OFFSET
 8

	)

14 
	#OLED_Y_OFFSET
 16

	)

19 
Mi¸oOLED
 
ﬁed
(
PIN_RESET
, 
PIN_DC
, 
PIN_CS
);

21 
gui
 
	gﬁed_gui
;

23 
	$¥öt_ﬁed
(* 
löe
, 
uöt8_t
 
off
){

24 
ﬁed
.
	`£tCurs‹
(0, 
off
);

25 
ﬁed
.
	`¥öt
(
löe
);

26 
	}
}

28 
	$ª‰esh_ﬁed
(** 
löe_¨r
){

29 
ﬁed
.
	`˛ór
(
PAGE
);

30 
	`¥öt_ﬁed
(
löe_¨r
[0], 0);

31 
	`¥öt_ﬁed
(
löe_¨r
[1], 
OLED_Y_OFFSET
);

32 
	`¥öt_ﬁed
(
löe_¨r
[2], 2*
OLED_Y_OFFSET
);

33 
ﬁed
.
	`di•œy
();

50 
	}
}

52 
gui
* 
	$£tup_ﬁed
(){

53 
ﬁed_gui
.
	`öô_gui
(
ª‰esh_ﬁed
);

54 
ﬁed
.
	`begö
();

55 
ﬁed
.
	`˛ór
(
ALL
);

56 
ﬁed
.
	`di•œy
();

57 
	`dñay
(1000);

58 
ﬁed
.
	`˛ór
(
PAGE
);

59 
ﬁed
.
	`£tF⁄tTy≥
(1);

60 
ﬁed
.
	`£tCurs‹
(0, 0);

61 
ﬁed
.
	`¥öt
("OLED init done");

62 
ﬁed
.
	`di•œy
();

63  &
ﬁed_gui
;

64 
	}
}

	@param.cpp

1 
	~"∑øm.h
"

3 
Àd_m©rix
* 
	g∑øm
::
	$gë_Àd_m©rix
(){

4  &
_lm
;

5 
	}
}

6 
¥og
* 
	g∑øm
::
	$gë_¥og
(){

7  
_p
;

8 
	}
}

9 
	g∑øm
::
	$£t_¥og
(
¥og
* 
p
){

10 
_p
 = 
p
;

11 
	}
}

	@param.h

1 #i‚de‡
__PARAM_H__


2 
	#__PARAM_H__


	)

7 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

8 
	~<Arduöo.h
>

10 
	~<WProgøm.h
>

13 
	~"ty≥s.h
"

14 
	~"Àd_m©rix.h
"

15 
	~"¥og.h
"

23 ˛as†
	c∑øm
: 
public
 
¥og
 {

25 
¥Ÿe˘ed
:

26 
Àd_m©rix
 
_lm
;

27 
¥og
* 
	m_p
;

29 
	mpublic
:

34 
Àd_m©rix
* 
gë_Àd_m©rix
();

35 
¥og
* 
gë_¥og
();

36 
£t_¥og
(
¥og
*);

39 
	$míu_íãr
(){};

40 
	$míu_Àave
(){
	}
};

41 
	$míu_upd©e
(){
	}
};

42 
	$míu_⁄_push
(
uöt8_t
, uöt8_t){ 1;
	}
}

43 
	$míu_⁄_ªÀa£
(
uöt8_t
, uöt8_t){ 1;
	}
}

45 
vútuÆ
 
⁄_push
(
uöt8_t
 
bä_id
) = 0;

46 
vútuÆ
 
⁄_l⁄g_push
(
uöt8_t
 
bä_id
) = 0;

47 
vútuÆ
 
⁄_ªÀa£
(
uöt8_t
 
bä_id
) = 0;

48 
vútuÆ
 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
) = 0;

49 
vútuÆ
 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
) = 0;

51 
vútuÆ
 
∑øm_⁄_íãr
() = 0;

52 
vútuÆ
 
∑øm_⁄_Àave
() = 0;

	@prog.cpp

1 
	~"¥og.h
"

3 
	g¥og
::
	$£t_¥og_id
(
uöt8_t
 
id
){

4 
¥og_id
 = 
id
;

5 
	}
}

6 
uöt8_t
 
	g¥og
::
	$gë_¥og_id
(){

7  
¥og_id
;

8 
	}
}

9 
¥og
* 
	g¥og
::
	$gë_¥og
(){

10  
this
;

11 
	}
}

13 
∑øm
* 
	g¥og
::
	$gë_∑øm
(){

14  
_∑øm
;

15 
	}
}

16 
	g¥og
::
	$£t_∑øm
(
∑øm
* 
p
){

17 
_∑øm
 = 
p
;

18 
	}
}

20 
Àd_m©rix
* 
	g¥og
::
	$gë_míu_lm
(){

21  
_míu_lm
;

22 
	}
}

23 
	g¥og
::
	$£t_míu_lm
(
Àd_m©rix
* 
lm
){

24 
_míu_lm
 = 
lm
;

25 
	}
}

26 
	g¥og
::
	$£t_gui
(
gui
* 
gui_±r
){

27 
_gui
 = 
gui_±r
;

28 
	}
}

29 
	g¥og
::
	$£t_tôÀ
(* 
°r
){

30 
_tôÀ
 = 
°r
;

31 
	}
}

32 
	g¥og
::
	$di•œy_tôÀ
(){

33 
_gui
->
	`upd_buf
(
_tôÀ
, 0);

34 
_gui
->
	`ª‰esh
();

35 
	}
}

36 
	g¥og
::
	$di•œy_°r
(* 
°r
, 
uöt8_t
 
idx
){

37 
_gui
->
	`upd_buf
(
°r
, 
idx
);

38 
_gui
->
	`ª‰esh
();

39 
	}
}

	@prog.h

1 #i‚de‡
__PROG_H__


2 
	#__PROG_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
˛ass
 
	g∑øm
;

12 
	~"ty≥s.h
"

13 
	~"Àd_m©rix.h
"

14 
	~"gui.h
"

16 ˛as†
	c¥og
 {

17 
	m¥Ÿe˘ed
:

18 
uöt8_t
 
¥og_id
;

19 
Àd_m©rix
* 
	m_míu_lm
;

20 
Àd_m©rix
* 
	m_∑øm_lm
;

21 
gui
* 
	m_gui
;

22 * 
	m_tôÀ
;

23 
∑øm
* 
	m_∑øm
;

25 
	mpublic
:

26 
di•œy_tôÀ
();

27 
di•œy_°r
(*, 
uöt8_t
);

29 
£t_¥og_id
(
uöt8_t
);

30 
uöt8_t
 
gë_¥og_id
();

31 
¥og
* 
gë_¥og
();

32 
vútuÆ
 
Àd_m©rix
* 
gë_Àd_m©rix
();

34 
∑øm
* 
gë_∑øm
();

35 
£t_∑øm
(
∑øm
*);

37 
Àd_m©rix
* 
gë_míu_lm
();

38 
£t_míu_lm
(
Àd_m©rix
*);

40 
£t_gui
(
gui
*);

41 
£t_tôÀ
(*);

43 
vútuÆ
 
míu_íãr
() = 0;

44 
vútuÆ
 
míu_Àave
() = 0;

45 
vútuÆ
 
míu_upd©e
() = 0;

46 
vútuÆ
 
míu_⁄_push
(
uöt8_t
, uint8_t) = 0;

47 
vútuÆ
 
míu_⁄_ªÀa£
(
uöt8_t
, uint8_t) = 0;

49 
vútuÆ
 
⁄_push
(
uöt8_t
 
bä_id
) = 0;

50 
vútuÆ
 
⁄_l⁄g_push
(
uöt8_t
 
bä_id
) = 0;

51 
vútuÆ
 
⁄_ªÀa£
(
uöt8_t
 
bä_id
) = 0;

52 
vútuÆ
 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
) = 0;

53 
vútuÆ
 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
) = 0;

58 
	~"∑øm.h
"

	@seq_param.cpp

1 
	~"£q_∑øm.h
"

3 
	#CLK_DIVIDER_LED_OFFSET
 8

	)

4 
	#CLK_MULTIPLIER_LED_OFFSET
 16

	)

5 
	#LED_ANIMATION_PER
 20

	)

12 
	g£q_∑øm
::
	$˛k_dividî_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

13 
i
 = 0;

14 if(
m°_ms
 > 0){

16 
i
=0;i<
MAX_DIVIDER
;i++){

17 if(!(
m°_°ï
 % (
i
+1))){

19 
_˛k_div_ui
[
i
].
	`tu∫_⁄_Àd
();

20 
_˛k_div_ui
[
i
].
	`°¨t_™im©i⁄
(
LED_ANIMATION_PER
 * 
m°_ms
 / 100);

26 
i
=0;i<
MAX_DIVIDER
;i++){

27 
_˛k_div_ui
[
i
].
	`upd©e_™im©i⁄
();

29 
	}
}

31 
	g£q_∑øm
::
	$˛k_mu…ùlõr_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

33 if(
m°_ms
 > 0){

35 
_˛k_mul_ui
[0].
	`tu∫_⁄_Àd
();

36 
_˛k_mul_ui
[0].
	`°¨t_™im©i⁄
(
LED_ANIMATION_PER
 * 
m°_ms
 / 100);

38 
i
=0;i<(
MAX_MULTIPLIER
-1);i++){

40 
_˛k_mul
[
i
].
	`˛k_sync_øtio
(
m°_ms
, 
m°_°ï
);

41 
_˛k_mul_ui
[
i
+1].
	`tu∫_⁄_Àd
();

42 
_˛k_mul_ui
[
i
+1].
	`°¨t_™im©i⁄
(
LED_ANIMATION_PER
 * 
_˛k_mul
[i].
	`˛k_gë_ms
() / 100);

46 
i
=0;i<(
MAX_MULTIPLIER
-1);i++){

47 
uöt32_t
 
ms
 = 
_˛k_mul
[
i
].
	`˛k_ñ≠£d
();

48 if(
ms
 > 0){

49 
_˛k_mul_ui
[
i
+1].
	`tu∫_⁄_Àd
();

50 
_˛k_mul_ui
[
i
+1].
	`°¨t_™im©i⁄
(
LED_ANIMATION_PER
 * 
ms
 / 100);

54 
i
=0;i<
MAX_MULTIPLIER
;i++){

55 
_˛k_mul_ui
[
i
].
	`upd©e_™im©i⁄
();

57 
	}
}

59 
	g£q_∑øm
::
	$öô
(
£quí˚r
* c⁄° 
s
, 
˛k
* c⁄° 
c
){

60 
_s
 = 
s
;

61 
_˛k_ªf
 = 
c
;

62 
i
=0;i<(
MATRIX_NR_COL
*
MATRIX_NR_ROW
);i++){

63 if(
_s
->
	`gë_f˘
(
i
))

64 
∑øm
::
_lm
.
	`£t_Àd_x
(
LED_R_IDX
, 
i
);

66 if(
_s
->
	`gë_f˘
(_s->
cuºít_∑øm_id
))

67 
∑øm
::
_lm
.
	`£t_Àd_x
(
LED_GBR_IDX
, 
_s
->
cuºít_∑øm_id
);

69 
i
=0;i<
MAX_DIVIDER
;i++){

70 
_˛k_div_ui
[
i
].
	`öô_™im©i⁄
(
∑øm
::
	`gë_Àd_m©rix
(),(
CLK_DIVIDER_LED_OFFSET
+i), 
LED_R_IDX
);

73 
_˛k_mul_ui
[0].
	`öô_™im©i⁄
(
∑øm
::
	`gë_Àd_m©rix
(),(
CLK_MULTIPLIER_LED_OFFSET
), 
LED_R_IDX
);

74 
i
=1;i<
MAX_MULTIPLIER
;i++){

75 
_˛k_mul_ui
[
i
].
	`öô_™im©i⁄
(
∑øm
::
	`gë_Àd_m©rix
(),(
CLK_MULTIPLIER_LED_OFFSET
+i), 
LED_R_IDX
);

77 
_˛k_mul
[(
i
-1)].
	`˛k_£t_øtio
(
_˛k_ªf
->
	`˛k_gë_ms
(), 1, (i+1));

80 
	}
}

82 
	g£q_∑øm
::
	$⁄_push
(
uöt8_t
 
bä_id
){

83 
f˘_˛bk
* 
fc
 = 
_s
->
	`gë_f˘
(
bä_id
);

84 if(
fc
){

85 
_s
->
¥og
::
	`di•œy_°r
(
fc
->
	`gë_f˘_«me
(), 1);

86 
∑øm
::
_lm
.
	`˛r_Àd_x
(
LED_GB_IDX
, 
_s
->
	`gë_cuºít_∑øm
());

87 
∑øm
::
_lm
.
	`£t_Àd_x
(
LED_GBR_IDX
, 
bä_id
);

89 if(
bä_id
 > 
CLK_DIVIDER_LED_OFFSET
 && bä_id < 
CLK_MULTIPLIER_LED_OFFSET
){

93 
_s
->
	`gë_cuºít_åack
()->
_˛k_def
.
numî©‹
 = (
bä_id
-
CLK_DIVIDER_LED_OFFSET
+1);

94 
_s
->
	`gë_cuºít_åack
()->
_˛k_def
.
díomö©‹
 = 1;

96 
_s
->
¥og
::
	`di•œy_°r
("div", 1);

98 if(
bä_id
 > 
CLK_MULTIPLIER_LED_OFFSET
 && btn_id < (CLK_MULTIPLIER_LED_OFFSET + 8)){

102 
_s
->
	`gë_cuºít_åack
()->
_˛k_def
.
numî©‹
 = 1;

103 
_s
->
	`gë_cuºít_åack
()->
_˛k_def
.
díomö©‹
 = (
bä_id
-
CLK_MULTIPLIER_LED_OFFSET
+1);

105 
_s
->
¥og
::
	`di•œy_°r
("mult", 1);

109 
_s
->
¥og
::
	`di•œy_°r
("undef", 1);

111 
	}
}

113 
	g£q_∑øm
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

114 
f˘_˛bk
* 
fc
 = 
_s
->
	`gë_f˘
(
bä_id
);

115 if(
fc
){

116 
_s
->
	`£t_cuºít_∑øm
(
bä_id
);

118 
	}
}

120 
	g£q_∑øm
::
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){

122 
	}
}

124 
£q_∑øm
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

125 
	`˛k_dividî_ui
(
m°_ms
, 
m°_°ï
);

126 
	`˛k_mu…ùlõr_ui
(
m°_ms
, 
m°_°ï
);

127 
	}
}

128 
	g£q_∑øm
::
	$∑øm_⁄_íãr
(){

131 
f˘_˛bk
* 
fc
 = 
_s
->
	`gë_f˘
(_s->
	`gë_cuºít_∑øm
());

132 if(
fc
)

133 
fc
->
	`⁄_Àave
();

134 
	}
}

135 
	g£q_∑øm
::
	$∑øm_⁄_Àave
(){

136 
f˘_˛bk
* 
fc
 = 
_s
->
	`gë_f˘
(_s->
	`gë_cuºít_∑øm
());

137 if(
fc
)

138 
fc
->
	`⁄_°¨t
();

139 
	}
}

	@seq_param.h

1 #i‚de‡
__SEQ_PARAM_H__


2 
	#__SEQ_PARAM_H__


	)

4 
	~"∑øm.h
"

5 
	~"£quí˚r.h
"

6 
	~"åack.h
"

7 
	~"Àd_toogÀ.h
"

8 
	~"˛k.h
"

10 
	#MAX_DIVIDER
 8

	)

11 
	#MAX_MULTIPLIER
 8

	)

13 ˛as†
	c£q_∑øm
: 
public
 
∑øm
 {

14 
¥iv©e
:

15 
£quí˚r
* 
_s
;

16 
Àd_toogÀ
 
	m_˛k_div_ui
[
MAX_DIVIDER
];

17 
Àd_toogÀ
 
	m_˛k_mul_ui
[
MAX_MULTIPLIER
];

18 
˛k
 
	m_˛k_mul
[
MAX_MULTIPLIER
-1];

19 
˛k
* 
	m_˛k_ªf
;

20 
˛k_dividî_ui
(
uöt32_t
, 
uöt16_t
);

21 
˛k_mu…ùlõr_ui
(
uöt32_t
, 
uöt16_t
);

23 
	mpublic
:

24 
	$£q_∑øm
(){};

25 ~
	$£q_∑øm
(){
	}
};

27 
öô
(
£quí˚r
* c⁄° 
s
, 
˛k
* c⁄° 
c
);

29 
⁄_push
(
uöt8_t
 
bä_id
);

30 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){
	}
};

31 
⁄_ªÀa£
(
uöt8_t
 
bä_id
);

32 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
);

33 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

35 
∑øm_⁄_íãr
();

36 
∑øm_⁄_Àave
();

	@sequencer.cpp

1 
	~"£quí˚r.h
"

3 
	g£quí˚r
::
	$£quí˚r
(){

4 
cuºít_∑øm_id
 = 0;

5 
i
=0;i<(
MATRIX_NR_COL
*
MATRIX_NR_ROW
);i++){

6 
f˘_¨r
[
i
] = 
NULL
;

8 
_ls_ui
.
°ï_id
 = -1;

9 
	}
}

11 
	g£quí˚r
::~
	$£quí˚r
(){

12 
	}
}

14 
åack
* 
£quí˚r
::
	$gë_åack
(
uöt8_t
 
åack_id
){

15  &
åack_¨r
[
åack_id
];

16 
	}
}

18 
åack
* 
	g£quí˚r
::
	$gë_cuºít_åack
(){

19  
cuºít
;

20 
	}
}

22 
	g£quí˚r
::
	$£t_cuºít_åack
(
uöt8_t
 
åack_id
){

23 
cuºít
 = &
åack_¨r
[
åack_id
];

24 
	}
}

26 
	g£quí˚r
::
	$£t_cuºít_∑øm
(
uöt8_t
 
id
){

27 
cuºít_∑øm_id
 = 
id
;

28 
	}
}

29 
uöt8_t
 
	g£quí˚r
::
	$gë_cuºít_∑øm
(){

30  
cuºít_∑øm_id
;

31 
	}
}

33 
	g£quí˚r
::
	$add_f˘
(
f˘_˛bk
* 
f˘
, 
uöt8_t
 
idx
){

34 
f˘_¨r
[
idx
] = 
f˘
;

35 
	}
}

36 
f˘_˛bk
* 
	g£quí˚r
::
	$gë_f˘
(
uöt8_t
 
idx
){

37  
f˘_¨r
[
idx
];

38 
	}
}

40 
	g£quí˚r
::
	$check_˛ks
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

41 
åack
* 
t
;

42 
i
=0;i<1 ;i++){

43 
t
 = &
åack_¨r
[
i
];

44 
t
->
	`check_evít
(
m°_ms
, 
m°_°ï
);

46 
	}
}

47 
	g£quí˚r
::
	$£t_åack_°¨t
(
boﬁ
 
∂ay
){

48 
i
=0;i<
SEQUENCER_NR_TRACK
;i++){

49 
åack_¨r
[
i
].
	`£t_∂ay
(
∂ay
);

51 
	}
}

52 
	g£quí˚r
::
	$ª£t_Æl
(){

53 
i
=0;i<
SEQUENCER_NR_TRACK
;i++){

54 
åack_¨r
[
i
].
	`°ï_ª£t
();

56 
	}
}

58 
	g£quí˚r
::
	$míu_íãr
(){

59 
	}
}

60 
£quí˚r
::
	$míu_Àave
(){

61 
	}
}

62 
£quí˚r
::
	$míu_upd©e
(){

63 
	}
}

66 
£quí˚r
::
	$míu_⁄_push
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

67 
ªt
 = 1;

68 
¥og
::
	`di•œy_tôÀ
();

69  
ªt
;

70 
	}
}

71 
	g£quí˚r
::
	$míu_⁄_ªÀa£
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

72 
ªt
 = 1;

73 
i
=0; i<
MATRIX_NR_COL
; i++){

74 if(
i
 =
›t_id
){

75 
	`gë_míu_lm
()->
	`£t_Àd_x
(
LED_B_IDX
, 
func_id
 * 
MATRIX_NR_ROW
 + 
i
);

76 
cuºít
 = 
	`gë_åack
(
i
);

79 
	`gë_míu_lm
()->
	`˛r_Àd_x
(
LED_B_IDX
, 
func_id
 * 
MATRIX_NR_ROW
 + 
i
);

82  
ªt
;

83 
	}
}

85 
	g£quí˚r
::
	$⁄_push
(
uöt8_t
 
bä_id
){

87 if(
f˘_¨r
[
cuºít_∑øm_id
]){

88 
f˘_¨r
[
cuºít_∑øm_id
]->
	`⁄_push
(
bä_id
);

90 
	}
}

91 
	g£quí˚r
::
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){

92 if(
f˘_¨r
[
cuºít_∑øm_id
]){

93 
f˘_¨r
[
cuºít_∑øm_id
]->
	`⁄_l⁄g_push
(
bä_id
);

95 
	}
}

96 
	g£quí˚r
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

97 if(
f˘_¨r
[
cuºít_∑øm_id
]){

98 
f˘_¨r
[
cuºít_∑øm_id
]->
	`⁄_ªÀa£
(
bä_id
);

100 
	}
}

101 
	g£quí˚r
::
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){

102 if(
f˘_¨r
[
cuºít_∑øm_id
]){

103 
f˘_¨r
[
cuºít_∑øm_id
]->
	`⁄_l⁄g_ªÀa£
(
bä_id
);

105 
	}
}

107 
	g£quí˚r
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

108 if(
f˘_¨r
[
cuºít_∑øm_id
])

109 
f˘_¨r
[
cuºít_∑øm_id
]->
	`upd©e_ui
(
m°_ms
,
m°_°ï
);

110 
	}
}

111 
Àd_m©rix
* 
	g£quí˚r
::
	$gë_Àd_m©rix
(){

112 
cuºít
->
	`gë_Àd_m©rix
();

113 
	}
}

	@sequencer.h

1 #i‚de‡
__SEQUENCE_H__


2 
	#__SEQUENCE_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
	~"ty≥s.h
"

11 
	~"¥og.h
"

12 
	~"˛k.h
"

13 
	~"Àd_m©rix.h
"

14 
	~"åack.h
"

15 
	~"f˘_˛bk.h
"

17 
	#SEQUENCER_NR_TRACK
 
MATRIX_NR_COL


	)

23 
	slöked_°ï_ui
 {

24 
ñ≠£dMûlis
 
	mms_˙t
;

25 
	m°ï_id
;

28 ˛as†
	c£quí˚r
 : 
public
 
¥og
 {

29 
¥iv©e
:

30 
åack
 
åack_¨r
[
SEQUENCER_NR_TRACK
];

31 
åack
* 
	mcuºít
;

32 
f˘_˛bk
* 
	mf˘_¨r
[
MATRIX_NR_COL
*
MATRIX_NR_ROW
];

35 
	mpublic
:

36 c⁄° 
uöt8_t
 
ƒ_åack
 = 1;

37 
uöt8_t
 
	mcuºít_∑øm_id
;

39 
löked_°ï_ui
 
	m_ls_ui
;

41 
£quí˚r
();

42 ~
£quí˚r
();

44 
åack
* 
gë_åack
(
uöt8_t
 
åack_id
);

45 
åack
* 
gë_cuºít_åack
();

46 
£t_cuºít_åack
(
uöt8_t
 
åack_id
);

47 
£t_cuºít_∑øm
(
uöt8_t
);

48 
uöt8_t
 
gë_cuºít_∑øm
();

50 
£t_åack_°¨t
(
boﬁ
);

51 
ª£t_Æl
();

53 
add_f˘
(
f˘_˛bk
*, 
uöt8_t
);

54 
f˘_˛bk
* 
gë_f˘
(
uöt8_t
);

56 
Àd_m©rix
* 
gë_Àd_m©rix
();

58 
⁄_push
(
uöt8_t
 
bä_id
);

59 
⁄_l⁄g_push
(
uöt8_t
 
bä_id
);

60 
⁄_ªÀa£
(
uöt8_t
 
bä_id
);

61 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
);

62 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

64 
check_˛ks
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

66 
míu_íãr
();

67 
míu_Àave
();

68 
míu_upd©e
();

69 
míu_⁄_push
(
uöt8_t
, uint8_t);

70 
míu_⁄_ªÀa£
(
uöt8_t
, uint8_t);

	@src/errata.h

1 #i‚de‡
__SRC_ERRATA_H__


2 
	#__SRC_ERRATA_H__


	)

4 
uöt8_t
 
	gîøè_°ï
[64] = {0,1,2,3,4,5,6,7,

13 
uöt8_t
 
	gîøè_bä
[64] = { 0,1,2,3,4,5,6,7,

	@src/sequencer/fct_loop_setting.cpp

1 
	~"f˘_lo›_£âög.h
"

2 
	~"../îøè.h
"

4 
	#BASE10
 10

	)

6 
	$upd_di•œy
(
£quí˚r
* 
£q
, 
uöt8_t
 
vÆ
){

7 
°r
[7];

8 
£q
->
¥og
::
	`di•œy_°r
(
	`ôﬂ
(
vÆ
,
°r
,
BASE10
), 2);

9 
	}
}

11 
	gf˘_lo›_£âög
::
	$öô
(
£quí˚r
* 
£q
, * 
«me
){

12 
_£q
 = 
£q
;

13 
f˘_˛bk
::
	`£t_f˘_«me
(
«me
);

14 
	}
}

16 
	gf˘_lo›_£âög
::
	$⁄_push
(
uöt8_t
 
bä_id
){

17 
uöt8_t
 
id
 = 
îøè_bä
[
bä_id
];

18 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

19 
uöt8_t
 
ƒ_°ï
 = 
t
->
	`gë_max_°ï
();

21 
	`upd_di•œy
(
_£q
, 
id
);

23 if((
id
+1Ë!
ƒ_°ï
){

26 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
îøè_°ï
[
ƒ_°ï
-1],
FOREGROUND1
);

36 
t
->
	`gë_Àd_m©rix
()->
	`ßve_n_£t
(
LED_G_IDX
, 
bä_id
, 
FOREGROUND1
);

37 
t
->
	`£t_max_°ï
(
id
+1);

49 
	}
}

50 
	gf˘_lo›_£âög
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

51 
	}
}

52 
f˘_lo›_£âög
::
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){

53 
	}
}

55 
f˘_lo›_£âög
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

57 
	}
}

58 
	gf˘_lo›_£âög
::
	$⁄_°¨t
(){

59 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

60 
uöt8_t
 
ƒ_°ï
 = 
t
->
	`gë_max_°ï
();

62 
	`upd_di•œy
(
_£q
, 
ƒ_°ï
);

63 
t
->
	`gë_Àd_m©rix
()->
	`ßve_n_£t
(
LED_G_IDX
, 
îøè_°ï
[
ƒ_°ï
-1], 
FOREGROUND1
);

69 
	}
}

70 
	gf˘_lo›_£âög
::
	$⁄_Àave
(){

71 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

72 
uöt8_t
 
ƒ_°ï
 = 
t
->
	`gë_max_°ï
();

73 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
îøè_°ï
[
ƒ_°ï
-1], 
FOREGROUND1
);

74 
	}
}

	@src/sequencer/fct_loop_setting.h

1 #i‚de‡
__SRC_SEQUENCER_FCT_LOOP_SETTING_H__


2 
	#__SRC_SEQUENCER_FCT_LOOP_SETTING_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
	~"../../f˘_˛bk.h
"

11 
	~"../../£quí˚r.h
"

13 ˛as†
	cf˘_lo›_£âög
: 
public
 
f˘_˛bk
 {

14 
¥iv©e
:

15 
£quí˚r
* 
_£q
;

16 
uöt8_t
 
	míd_lo›
;

18 
	mpublic
:

19 
	$f˘_lo›_£âög
(){};

20 ~
	$f˘_lo›_£âög
(){
	}
};

22 
öô
(
£quí˚r
*, * 
«me
);

23 
⁄_push
(
uöt8_t
 
bä_id
);

24 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){
	}
};

25 
⁄_ªÀa£
(
uöt8_t
 
bä_id
);

26 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
);

27 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

28 
⁄_°¨t
();

29 
⁄_Àave
();

	@src/sequencer/fct_step.cpp

1 
	~"f˘_°ï.h
"

2 
	~"../îøè.h
"

4 
	#BASE10
 10

	)

5 
	#LONG_PRESS_MS
 100

	)

7 
	gf˘_°ï
::
	$öô
(
£quí˚r
* 
£q
, * 
«me
){

8 
_£q
 = 
£q
;

9 
_Õ_˙t
 = 0;

10 
f˘_˛bk
::
	`£t_f˘_«me
(
«me
);

11 
	}
}

13 
	$˛ór_Æl_l⁄g_pushed_ui
(
åack
* 
t
, 
uöt8_t
* 
Õ_˙t
, 
Àd_blök_t
* 
Õ_ui
){

15 
uöt8_t
 
i
=0; i<*
Õ_˙t
; i++){

16 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
Õ_ui
[
i
].
_id
, 
FOREGROUND1
);

18 *
Õ_˙t
 = 0;

19 
	}
}

21 
boﬁ
 
	$bä_was_l⁄g_pushed
(
uöt8_t
 
bä_id
, uöt8_à
Õ_˙t
, c⁄° 
Àd_blök_t
* 
Õ_ui
){

22 
boﬁ
 
Êg
 = 
Ál£
;

23 
uöt8_t
 
i
=0; i<
Õ_˙t
; i++){

24 if(
bä_id
 =
Õ_ui
[
i
].
_id
){

25 
Êg
 = 
åue
;

28  
Êg
;

29 
	}
}

31 
boﬁ
 
	$lök_°ïs
(
£quí˚r
 *
s
, 
uöt8_t
 
fú°
, uöt8_à
£c⁄d
){

32 
åack
* 
t
 = 
s
->
	`gë_cuºít_åack
();

33 
uöt8_t
 
°ï_˙t
 = 
fú°
;

34 
boﬁ
 
ªs
 = 
Ál£
;

72  
ªs
;

73 
	}
}

75 
	$u∆ök_°ïs
(
£quí˚r
 *
s
, 
uöt8_t
 
°ï
){

76 
åack
* 
t
 = 
s
->
	`gë_cuºít_åack
();

77 
uöt8_t
 
tmp
;

96 
	}
}

99 
	$shi·_°ï_ui
(
åack
* 
t
, 
°ï
* 
s
, 
shi·
){

100 
ªt
;

101 
uöt8_t
 
id
 = 
s
->
_°ï_ui_id
 + 
shi·
;

105 if–
id
 >
NR_STEP
 ){

106 
id
 = 
NR_STEP
 - 1;

107 
t
->
_mtx_bä_to_°ï
[
id
] = 
NULL
;

111 
t
->
_mtx_bä_to_°ï
[
id
] = 
s
;

112 if(
s
->
	`is_°ï_a˘ive
()){

115 
ªt
 = 
t
->
	`gë_Àd_m©rix
()->
	`ßve_n_£t
(
s
->
	`gë_°ï_cﬁ‹
(), 
îøè_°ï
[
id
], 
BACKGROUND
);

120 
s
->
_°ï_ui_id
 = 
id
;

122 
	}
}

124 
	$˛ór_°ïs
(
°ï
* 
°ï_‰om
, sãp* 
°ï_to
, 
åack
* 
t
){

126 
°ï
* 
s
 = 
°ï_‰om
;

127 
s
 !
°ï_to
){

129 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
îøè_°ï
[
s
->
_°ï_ui_id
],
BACKGROUND
);

132 
°ï
* 
tmp
 = 
s
->
	`gë_√xt_°ï
();

133 
åack
::
	`dñëe_°ï
(&
t
->
_°ï_li°
,
s
);

134 
s
 = 
tmp
;

136 
	}
}

138 
	gf˘_°ï
::
	$⁄_push
(
uöt8_t
 
bä_id
){

139 
°r
[7];

140 
uöt8_t
 
id
 = 
îøè_bä
[
bä_id
];

141 
_£q
->
¥og
::
	`di•œy_°r
(
	`ôﬂ
(
bä_id
,
°r
,
BASE10
), 2);

142 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

144 if(
t
->
_mtx_bä_to_°ï
[
id
]){

145 if(!
t
->
_mtx_bä_to_°ï
[
id
]->
	`is_°ï_a˘ive
()){

146 
t
->
	`gë_Àd_m©rix
()->
	`toogÀ_Àd_x
—->
_mtx_bä_to_°ï
[
id
]->
	`gë_°ï_cﬁ‹
(), 
bä_id
);

150 
	}
}

151 
	gf˘_°ï
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

152 
uöt8_t
 
id
 = 
îøè_bä
[
bä_id
];

153 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

156 if(
_Õ_˙t
 == 1){

168 
	`˛ór_Æl_l⁄g_pushed_ui
(
t
, &
_Õ_˙t
, 
_Õ_ui
);

170 if(
_Õ_˙t
 == 2){

171 
uöt8_t
 
‰om
 = 
îøè_bä
[
_Õ_ui
[0].
_id
];

172 
uöt8_t
 
to
 = 
îøè_bä
[
_Õ_ui
[1].
_id
];

173 
uöt8_t
 
ƒ_√w_°ï
 = 
id
 + 1;

176 
	`˛ór_Æl_l⁄g_pushed_ui
(
t
, &
_Õ_˙t
, 
_Õ_ui
);

177 
t
->
	`gë_Àd_m©rix
()->
	`toogÀ_Àd_x
—->
_mtx_bä_to_°ï
[
id
]->
	`gë_°ï_cﬁ‹
(), 
bä_id
);

179 if(
‰om
 > 
to
){

180 
Sîül
.
	`¥öén
("unableÅo insert sub-track");

183 
Sîül
.
	`¥öt
("from ");

184 
Sîül
.
	`¥öt
(
‰om
);

185 
Sîül
.
	`¥öt
("Åo ");

186 
Sîül
.
	`¥öt
(
to
);

187 
Sîül
.
	`¥öt
("Çr_new_step ");

188 
Sîül
.
	`¥öén
(
ƒ_√w_°ï
);

191 
°ï
* 
s
 = 
t
->
_mtx_bä_to_°ï
[
‰om
]->
	`gë_√xt_°ï
();

192 
°ï
* 
°ï_to
 = 
t
->
_mtx_bä_to_°ï
[
to
];

194 
	`˛ór_°ïs
(
s
, 
t
->
_mtx_bä_to_°ï
[
to
],Å);

222 
°ï
* 
°ï_to
 = 
s
;

223 
i
=
to
;i<
NR_STEP
;i++){

226 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
îøè_°ï
[
i
], 
BACKGROUND
);

228 
s
 !
t
->
	`gë_fú°_°ï
()){

233 
	`shi·_°ï_ui
(
t
, 
s
, (
ƒ_√w_°ï
-(
to
-
‰om
)));

234 
s
 = s->
	`gë_√xt_°ï
();

237 
s
 = 
t
->
_mtx_bä_to_°ï
[
‰om
];

238 
s
->
_˛k_def
.
numî©‹
 = (
to
-
‰om
);

239 
s
->
_˛k_def
.
díomö©‹
 = 
ƒ_√w_°ï
;

241 
i
=1;i<(
ƒ_√w_°ï
);i++){

242 
°ï
* 
tmp
 = 
√w
 step;

243 
tmp
->
_°ï_ui_id
 = 
‰om
 + 
i
;

244 
tmp
->
_˛k_def
.
numî©‹
 = (
to
-
‰om
);

245 
tmp
->
_˛k_def
.
díomö©‹
 = 
ƒ_√w_°ï
;

247 
t
->
_mtx_bä_to_°ï
[
‰om
 + 
i
] = 
tmp
;

248 
t
->
_°ï_li°
.
	`add
(
‰om
 + 
i
, 
tmp
);

249 
tmp
->
	`£t_°ï_id
(
t
->
_°ï_li°
.
	`size
() - 1);

251 
s
->
	`£t_√xt_°ï
(
tmp
);

252 
s
 = 
tmp
;

259 
s
->
	`£t_√xt_°ï
(
°ï_to
);

265 if(
t
->
_mtx_bä_to_°ï
[
id
]){

266 if(
t
->
_mtx_bä_to_°ï
[
id
]->
	`is_°ï_a˘ive
()){

274 
t
->
_mtx_bä_to_°ï
[
id
]->
	`˛r_°ï_a˘ive
();

275 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
bä_id
, 
BACKGROUND
);

277 
t
->
_mtx_bä_to_°ï
[
id
]->
	`£t_°ï_a˘ive
();

278 
t
->
	`gë_Àd_m©rix
()->
	`ßve_n_£t
—->
_mtx_bä_to_°ï
[
id
]->
	`gë_°ï_cﬁ‹
(), 
bä_id
, 
BACKGROUND
);

282 
	}
}

283 
	gf˘_°ï
::
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){

284 
uöt8_t
 
id
 = 
îøè_bä
[
bä_id
];

285 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

287 if(
_Õ_˙t
 < 
BTN_MAX_LONG_PUSH_STATE
){

288 
_Õ_ui
[
_Õ_˙t
].
_ms
 = 0;

289 
_Õ_ui
[
_Õ_˙t
].
_id
 = 
bä_id
;

290 
t
->
	`gë_Àd_m©rix
()->
	`ßve_n_£t
—->
_mtx_bä_to_°ï
[
id
]->
	`gë_°ï_cﬁ‹
(), 
bä_id
, 
FOREGROUND1
);

291 ++
_Õ_˙t
;

294 
t
->
	`gë_Àd_m©rix
()->
	`ßve_n_£t
—->
_mtx_bä_to_°ï
[
id
]->
	`gë_°ï_cﬁ‹
(), 
bä_id
, 
FOREGROUND1
);

295 
	`˛ór_Æl_l⁄g_pushed_ui
(
t
, &
_Õ_˙t
, 
_Õ_ui
);

296 
t
->
	`gë_Àd_m©rix
()->
	`˛r_n_ª°‹e
(
bä_id
, 
FOREGROUND1
);

299 
	}
}

300 
	gf˘_°ï
::
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){

302 
	}
}

304 
f˘_°ï
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

305 
åack
* 
t
 = 
_£q
->
	`gë_cuºít_åack
();

306 
uöt8_t
 
i
 = 0; i<
_Õ_˙t
; i++){

307 if(
_Õ_ui
[
i
].
_ms
 >
LONG_PRESS_MS
){

308 
t
->
	`gë_Àd_m©rix
()->
	`toogÀ_Àd_x
—->
_mtx_bä_to_°ï
[
_Õ_ui
[
i
].
_id
]->
	`gë_°ï_cﬁ‹
(), _lp_ui[i]._id);

309 
_Õ_ui
[
i
].
_ms
 = 0;

312 
	}
}

314 
	gf˘_°ï
::
	$⁄_°¨t
(){

315 
	}
}

316 
f˘_°ï
::
	$⁄_Àave
(){

317 
	`˛ór_Æl_l⁄g_pushed_ui
(
_£q
->
	`gë_cuºít_åack
(), &
_Õ_˙t
, 
_Õ_ui
);

318 
	}
}

	@src/sequencer/fct_step.h

1 #i‚de‡
__SRC_SEQUENCER_FCT_STEP_H__


2 
	#__SRC_SEQUENCER_FCT_STEP_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
	~"../../f˘_˛bk.h
"

11 
	~"../../£quí˚r.h
"

12 
	~"../../bä_°©e.h
"

16 
	#BTN_MAX_LONG_PUSH_STATE
 2

	)

18 
	sÀd_blök_t
 {

19 
ñ≠£dMûlis
 
	m_ms
;

20 
uöt8_t
 
	m_id
;

23 ˛as†
	cf˘_°ï
: 
public
 
f˘_˛bk
 {

24 
¥iv©e
:

25 
£quí˚r
* 
_£q
;

26 
bä_°©e
 
	m_bs
;

27 
Àd_blök_t
 
	m_Õ_ui
[
BTN_MAX_LONG_PUSH_STATE
];

28 
uöt8_t
 
	m_Õ_˙t
;

30 
	mpublic
:

31 
	$f˘_°ï
(){};

32 ~
	$f˘_°ï
(){
	}
};

34 
öô
(
£quí˚r
*, * 
«me
);

35 
⁄_push
(
uöt8_t
 
bä_id
);

36 
⁄_l⁄g_push
(
uöt8_t
 
bä_id
);

37 
⁄_ªÀa£
(
uöt8_t
 
bä_id
);

38 
⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
);

39 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

41 
⁄_°¨t
();

42 
⁄_Àave
();

	@step.cpp

1 
	~"°ï.h
"

2 
	~"Àd_m©rix.h
"

4 
	g°ï
::
	$°ï
(){

5 
Êag_a˘ive
 = 
Ál£
;

6 
_löked
 = 
Ál£
;

7 
g©e_Àn_≥r
 = 20;

8 
Êg_g©e
 = 
Ál£
;

9 
_nŸe
.
vñocôy
 = 127;

10 
_nŸe
.
pôch
 = 37;

11 
_g©e_bmp
 = 0x0;

12 
_cﬁ‹
 = 
LED_R_IDX
;

13 
_˛k_def
.
numî©‹
 = 1;

14 
_˛k_def
.
díomö©‹
 = 1;

15 
	}
}

17 
	g°ï
::~
	$°ï
(){

18 
	}
}

20 
°ï
::
	$°ï_£t_nŸe
(
uöt8_t
 
vñ
, 
uöt16_t
 
pôch
){

21 
_nŸe
.
vñocôy
 = 
vñ
;

22 
_nŸe
.
pôch
 =Öitch;

23 
	}
}

25 
boﬁ
 
	g°ï
::
	$ª£t_g©e
(){

26 
g©e_ñ≠£d
 = 0;

28  (
_g©e_bmp
 & 
GATE_UP
);

29 
	}
}

30 
boﬁ
 
	g°ï
::
	$upd_g©e
(){

31 
boﬁ
 
ªs
 = 
Ál£
;

33 if–(
_g©e_bmp
 & 
GATE_DW
Ë&& (
g©e_ñ≠£d
 > 
g©e_Àn_ms
) ){

34 
ªs
 = 
åue
;

37  
ªs
;

38 
	}
}

43 
boﬁón
 
	g°ï
::
	$is_°ï_a˘ive
(){

44  
Êag_a˘ive
;

45 
	}
}

47 
	g°ï
::
	$£t_°ï_a˘ive
(){

48 
Êag_a˘ive
 = 
åue
;

49 
_g©e_bmp
 = 
GATE_ON
;

50 
	}
}

52 
	g°ï
::
	$˛r_°ï_a˘ive
(){

53 
Êag_a˘ive
 = 
Ál£
;

54 
_g©e_bmp
 = 
GATE_OFF
;

55 
	}
}

57 
	g°ï
::
	$£t_°ï_up
(){

58 
Êag_a˘ive
 = 
åue
;

59 
_g©e_bmp
 |
GATE_UP
;

60 
	}
}

61 
	g°ï
::
	$£t_°ï_dw
(){

62 
Êag_a˘ive
 = 
åue
;

63 
_g©e_bmp
 |
GATE_DW
;

64 
	}
}

65 
	g°ï
::
	$£t_°ï_off
(){

66 
Êag_a˘ive
 = 
åue
;

67 
_g©e_bmp
 = 
GATE_OFF
;

68 
	}
}

70 
	g°ï
::
	$£t_√xt_°ï
(
°ï
* 
s
){

71 
_√xt
 = 
s
;

72 
	}
}

73 
°ï
* 
	g°ï
::
	$gë_√xt_°ï
(){

74  
_√xt
;

75 
	}
}

77 
	g°ï
::
	$£t_°ï_cﬁ‹
(
uöt8_t
 
cﬁ‹
){

78 
_cﬁ‹
 = 
cﬁ‹
;

79 
	}
}

80 
uöt8_t
 
	g°ï
::
	$gë_°ï_cﬁ‹
(){

81  
_cﬁ‹
;

82 
	}
}

84 
	g°ï
::
	$£t_˛k
(
˛k
* 
c
){

85 
_c
 = 
c
;

86 
	}
}

88 
˛k
* 
	g°ï
::
	$gë_˛k
(){

89  
_c
;

90 
	}
}

92 
uöt8_t
 
	g°ï
::
	$gë_°ï_g©e_Àn
(){

93  
g©e_Àn_≥r
;

94 
	}
}

96 
	g°ï
::
	$£t_°ï_g©e_Àn
(
uöt32_t
 
ms
, 
uöt8_t
 
Àn
){

97 
g©e_Àn_≥r
 = 
Àn
;

98 
g©e_Àn_ms
 = 
ms
;

99 
	}
}

101 
	g°ï
::
	$upd_°ï_g©e_Àn
(
uöt32_t
 
ms_ªf
){

102 
g©e_Àn_ms
 = 
ms_ªf
 * 
g©e_Àn_≥r
 / 100;

103 
	}
}

105 
uöt8_t
 
	g°ï
::
	$gë_°ï_id
(){

106  
°ï_id
;

107 
	}
}

109 
	g°ï
::
	$£t_°ï_id
(
uöt8_t
 
id
){

110 
°ï_id
 = 
id
;

111 
	}
}

117 
boﬁón
 
	g°ï
::
	$°ï_°©us
(){

118  
Êag_a˘ive
;

119 
	}
}

121 
	g°ï
::
	$lök_°ï
(){

122 
_löked
 = 
åue
;

125 
	}
}

126 
	g°ï
::
	$u∆ök_°ï
(){

127 
_löked
 = 
Ál£
;

128 
	}
}

129 
boﬁ
 
	g°ï
::
	$is_°ï_löked
(){

130  
_löked
;

131 
	}
}

	@step.h

1 #i‚de‡
__STEP_H__


2 
	#__STEP_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
	~"ty≥s.h
"

11 
	~"˛k.h
"

13 
	#GATE_UP
 (1<<0)

	)

14 
	#GATE_DW
 (1<<1)

	)

15 
	#GATE_ON
 (
GATE_UP
 | 
GATE_DW
)

	)

16 
	#GATE_OFF
 0x0

	)

18 
	snŸe
 {

19 
uöt8_t
 
	mvñocôy
;

20 
uöt16_t
 
	mpôch
;

23 ˛as†
	c°ï
 {

24 
	m¥iv©e
:

25 
uöt8_t
 
°ï_id
;

26 
boﬁón
 
	mÊag_a˘ive
;

27 
boﬁ
 
	m_löked
;

28 
uöt8_t
 
	m_g©e_bmp
;

29 
uöt8_t
 
	mg©e_Àn_≥r
;

30 
uöt32_t
 
	mg©e_Àn_ms
;

31 
boﬁ
 
	mÊg_g©e
;

32 
ñ≠£dMûlis
 
	mg©e_ñ≠£d
;

34 
°ï
* 
	m_√xt
;

35 
˛k
* 
	m_c
;

37 
uöt8_t
 
	m_cﬁ‹
;

39 
	mpublic
:

40 
°ï
();

41 ~
°ï
();

42 
nŸe
 
	m_nŸe
;

43 
˛k_def
 
	m_˛k_def
;

44 
uöt8_t
 
	m_°ï_ui_id
;

49 
boﬁ
 
ª£t_g©e
();

50 
boﬁ
 
upd_g©e
();

51 
£t_°ï_g©e_Àn
(
uöt32_t
 
ms
, 
uöt8_t
 
Àn
);

52 
upd_°ï_g©e_Àn
(
uöt32_t
);

54 
boﬁón
 
is_°ï_a˘ive
();

55 
£t_°ï_a˘ive
();

56 
˛r_°ï_a˘ive
();

57 
£t_°ï_up
();

58 
£t_°ï_dw
();

59 
£t_°ï_off
();

62 
£t_√xt_°ï
(
°ï
*);

63 
°ï
* 
gë_√xt_°ï
();

65 
£t_°ï_cﬁ‹
(
uöt8_t
);

66 
uöt8_t
 
gë_°ï_cﬁ‹
();

69 
£t_˛k
(
˛k
*);

70 
˛k
* 
gë_˛k
();

72 
uöt8_t
 
gë_°ï_g©e_Àn
();

73 
uöt8_t
 
gë_°ï_id
();

75 
°ï_£t_nŸe
(
uöt8_t
, 
uöt16_t
);

77 
£t_°ï_id
(
uöt8_t
 
id
);

78 
boﬁón
 
°ï_°©us
();

79 
lök_°ï
();

80 
u∆ök_°ï
();

81 
boﬁ
 
is_°ï_löked
();

	@tempo.cpp

1 
	~"ãmpo.h
"

3 
	#DEBUG
 1

	)

4 
	#LED_ANIMATION_MS
 60

	)

6 
	#BPM_BTN_ID
 0

	)

7 
	#TAP_BTN_ID
 1

	)

8 
	#START_BTN_ID
 2

	)

9 
	#RESET_BTN_ID
 3

	)

11 (*
⁄_ãmpo_ch™ge
)(
uöt32_t
 
ms
);

13 
ãmpo
::
	$ãmpo
(){

14 
_èp_˙t
 = 0;

15 
_ö_míu_mode
 = 
Ál£
;

16 
_∂ay
 = 
Ál£
;

17 
	}
}

19 
	gãmpo
::~
	$ãmpo
(){

20 
	}
}

22 
ãmpo
::
	$öô
((*
f˘
)(
uöt32_t
), 
£quí˚r
* 
£q
){

23 
Àd_m©rix
* 
lm
 = 
	`gë_míu_lm
();

24 
_èp_™im©i⁄
.
	`öô_™im©i⁄
(
lm
,(
¥og_id
*
MATRIX_NR_COL
+
TAP_BTN_ID
), 
LED_GBR_IDX
);

25 
_˛k_™im©i⁄
.
	`öô_™im©i⁄
(
lm
,(
¥og_id
*
MATRIX_NR_COL
+
BPM_BTN_ID
), 
LED_R_IDX
);

27 
⁄_ãmpo_ch™ge
 = 
f˘
;

28 
_£q
 = 
£q
;

29 
lm
->
	`£t_Àd_x
(
LED_R_IDX
, 
START_BTN_ID
);

30 
lm
->
	`£t_Àd_x
(
LED_R_IDX
, 
RESET_BTN_ID
);

32 
	}
}

34 
	gãmpo
::
	$˛r_èp
(){

35 
_èp_˙t
 = 0;

36 
	}
}

38 
Àd_m©rix
* 
	gãmpo
::
	$gë_Àd_m©rix
(){

39  
NULL
;

40 
	}
}

42 
	gãmpo
::
	$èp
(){

43 if(
_èp_˙t
 > 0){

44 
_èp_time°amp
[(
_èp_˙t
-1)] = 
_ñœp£d_èp
;

46 
_ñœp£d_èp
 = 0;

48 if(
_èp_˙t
 =(
NR_TAP
-1)){

49 
uöt32_t
 
avg
 = 0;

50 
i
=0; i<
NR_TAP
; i++){

51 
avg
 +
_èp_time°amp
[
i
];

53 
avg
 /(
NR_TAP
-1);

54 
_m°
.
	`˛k_bpms_to_bpm
(
avg
);

55 
	`⁄_ãmpo_ch™ge
(
avg
);

57 
_èp_˙t
 = (_èp_˙à+ 1Ë% 
NR_TAP
;

58 
	}
}

60 
	gãmpo
::
	$⁄_push
(
uöt8_t
 
bä_id
){

61 
	}
}

62 
ãmpo
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

63 
	}
}

65 
˛k
* 
ãmpo
::
	$gë_m°_˛k
(){

66  &
_m°
;

67 
	}
}

70 
uöt32_t
 
	gãmpo
::
	$check_m°_˛k
(){

71 
uöt32_t
 
ªt
 = 
_m°
.
	`˛k_ñ≠£d
();

72 if(
ªt
 && 
_ö_míu_mode
){

73 
_˛k_™im©i⁄
.
	`tu∫_⁄_Àd
();

74 
_˛k_™im©i⁄
.
	`°¨t_™im©i⁄
(
LED_ANIMATION_MS
);

76  
ªt
;

77 
	}
}

79 
	gãmpo
::
	$míu_íãr
(){

80 
_ö_míu_mode
 = 
åue
;

81 
	}
}

82 
	gãmpo
::
	$míu_Àave
(){

83 
_ö_míu_mode
 = 
Ál£
;

84 
	}
}

86 
	gãmpo
::
	$míu_upd©e
(){

88 
_èp_™im©i⁄
.
	`upd©e_™im©i⁄
();

89 
_˛k_™im©i⁄
.
	`upd©e_™im©i⁄
();

90 
	}
}

93 
	gãmpo
::
	$míu_⁄_push
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

94 
ªt
 = 0;

95 
¥og
::
	`di•œy_tôÀ
();

96 if(
›t_id
 =
TAP_BTN_ID
){

97 
_èp_™im©i⁄
.
	`°¨t_™im©i⁄
(
LED_ANIMATION_MS
);

99 if(
›t_id
 =
START_BTN_ID
){

100 
_∂ay
 = !_play;

101 
_£q
->
	`£t_åack_°¨t
(
_∂ay
);

102 if(
_∂ay
){

103 
	`gë_míu_lm
()->
	`Àd_ovw
(
LED_B_IDX
, 
›t_id
);

106 
	`gë_míu_lm
()->
	`Àd_ovw
(
LED_R_IDX
, 
›t_id
);

109 if(
›t_id
 =
RESET_BTN_ID
){

110 
_£q
->
	`ª£t_Æl
();

111 
	`gë_míu_lm
()->
	`Àd_ovw
(
LED_G_IDX
, 
›t_id
);

114  
ªt
;

115 
	}
}

116 
	gãmpo
::
	$míu_⁄_ªÀa£
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

117 
ªt
 = 0;

118 if(
›t_id
 =
TAP_BTN_ID
){

119 
	`èp
();

120 
_èp_™im©i⁄
.
	`tu∫_⁄_Àd
();

122 if(
›t_id
 =
RESET_BTN_ID
){

123 
	`gë_míu_lm
()->
	`Àd_ovw
(
LED_R_IDX
, 
›t_id
);

126  
ªt
;

127 
	}
}

129 
	gãmpo
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

130 
	}
}

	@tempo.h

1 #i‚de‡
__TEMPO_H__


2 
	#__TEMPO_H__


	)

4 
	~"¥og.h
"

5 
	~"Àd_m©rix.h
"

6 
	~"˛k.h
"

7 
	~"Àd_toogÀ.h
"

8 
	~"£quí˚r.h
"

10 
	#NR_TAP
 2

	)

12 ˛as†
	cãmpo
 : 
public
 
¥og
 {

13 
¥iv©e
:

14 
Àd_m©rix
 
_lm
;

15 
ñ≠£dMûlis
 
	m_ñœp£d_èp
;

16 
˛k
 
	m_m°
;

17 
uöt32_t
 
	m_èp_time°amp
[
NR_TAP
-1];

18 
uöt8_t
 
	m_èp_˙t
;

19 
Àd_toogÀ
 
	m_èp_™im©i⁄
;

20 
Àd_toogÀ
 
	m_˛k_™im©i⁄
;

21 
boﬁ
 
	m_ö_míu_mode
;

22 
£quí˚r
* 
	m_£q
;

23 
boﬁ
 
	m_∂ay
;

25 
	m¥Ÿe˘ed
:

26 
èp
();

28 
	mpublic
:

29 
ãmpo
();

30 ~
ãmpo
();

32 
öô
((*)(
uöt32_t
), 
£quí˚r
*);

34 
Àd_m©rix
* 
	`gë_Àd_m©rix
();

35 
˛k
* 
	`gë_m°_˛k
();

36 
	`˛r_èp
();

38 
uöt32_t
 
	`check_m°_˛k
();

40 
	`míu_íãr
();

41 
	`míu_Àave
();

42 
	`míu_upd©e
();

43 
	`míu_⁄_push
(
uöt8_t
, uint8_t);

44 
	`míu_⁄_ªÀa£
(
uöt8_t
, uint8_t);

46 
	`⁄_push
(
uöt8_t
 
bä_id
);

47 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){};

48 
	`⁄_ªÀa£
(
uöt8_t
 
bä_id
);

49 
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){
	}
};

50 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

	@test7-refactor.ino

24 
	~<i2c_t3.h
>

25 
	~<Ada‰uô_MCP23017.h
>

26 
	~<LökedLi°.h
>

28 
	~"ty≥s.h
"

29 
	~"Àd_m©rix.h
"

30 
	~"Boun˚_¨øy.h
"

31 
	~"˛k.h
"

32 
	~"¥og.h
"

33 
	~"míu.h
"

35 
	~"åack.h
"

36 
	~"°ï.h
"

37 
	~"£quí˚r.h
"

38 
	~"gui.h
"

40 
	~"ãmpo.h
"

41 
	~"ã°_¥oj_⁄e.h
"

42 
	~"ã°_¥oj_two.h
"

43 
	~"§c/£quí˚r/f˘_°ï.h
"

44 
	~"§c/£quí˚r/f˘_lo›_£âög.h
"

45 
	~"£q_∑øm.h
"

47 
Maö
 
	g£quí˚±i⁄
;

49 
gui
 *
	ggui_˘æ
;

51 
¥og
 *
	g¥og_¨r
[
MATRIX_NR_COL
];

52 
¥og
 *
	gcuºít_¥og
;

53 
	gƒ_¥og
;

64 
Àd_m©rix
* 
	glm_±r
;

67 
˛k
* 
	gm°_˛k
;

68 vﬁ©ûê
boﬁ
 
	gcheck_˛k
;

70 
uöt8_t
 
	gbä_cﬁ_idx
;

71 vﬁ©ûê
boﬁ
 
	gbä_Êag
;

72 vﬁ©ûê
boﬁ
 
	gmidi_Êag
;

74 
I¡îvÆTimî
 
	gui_timî
;

75 
I¡îvÆTimî
 
	gbä_timî
;

76 
I¡îvÆTimî
 
	gmidi_timî
;

78 
boﬁ
 
	gÊag_bä_a˘ive
;

80 
	$upd_midi
(){

81 
midi_Êag
 = 
åue
;

82 
	}
}

84 
	$check_bä
(){

85 if(!
bä_Êag
)

86 
bä_Êag
 = 
åue
;

87 
	}
}

89 
	$upd_gui
(){

90 
	`upd_shi·_ªg
(
lm_±r
);

91 if(!
check_˛k
)

92 
check_˛k
 = 
åue
;

93 
	}
}

95 
	$ãmpo_ch™ge_h™dÀr
(
uöt32_t
 
ms
){

96 
	`noI¡îru±s
();

97 
uöt32_t
 
tmp
 = ((
ms
*1000)/
MIDI_SYNC_PPN
);

99 
midi_timî
.
	`begö
(
upd_midi
, 
tmp
);

100 
	`öãºu±s
();

101 
	}
}

189 
	$£tup
(){

191 
gui_˘æ
 = 
	`£tup_ﬁed
();

192 
	`£tup_gui
();

193 
	`öô_m©rix_bä
();

194 
	`öô_midi
();

197 
ui_timî
.
	`begö
(
upd_gui
, 1000);

198 
bä_timî
.
	`begö
(
check_bä
, 1000);

202 
	`öô_Æl_¥og
();

205 
	`öô_míu_bä
(
cuºít_¥og
);

207 
	}
}

210 
	$lo›
(){

211 
uöt32_t
 
˛k_ªs
 = 0;

212 if(
check_˛k
){

213 
˛k_ªs
 = 
ãmpo_£âög
.
	`check_m°_˛k
();

214 
check_˛k
 = 
Ál£
;

216 if(
bä_Êag
){

217 
	`sˇn
(
cuºít_¥og
);

218 
	`sˇn_míu_bä
();

219 
	`sˇn_∑øm_bä
();

222 if(
cuºít_¥og
 =
¥og_¨r
[
ƒ_¥og
])

223 
£quí˚±i⁄
.
míu_˘æ
.
	`míu_upd©e
();

225 
cuºít_¥og
->
	`upd©e_ui
(
˛k_ªs
, 
m°_˛k
->
	`˛k_gë_°ï_˙t
());

227 
	`midi_lo›
(
midi_Êag
);

228 if(
midi_Êag
)

229 
midi_Êag
 = 
Ál£
;

231 
midi_£q
.
	`check_˛ks
(
˛k_ªs
, 
m°_˛k
->
	`˛k_gë_°ï_˙t
());

232 
	}
}

	@test_proj_one.cpp

1 
	~"ã°_¥oj_⁄e.h
"

3 
	#BTN_LED_DELAY_MS
 50

	)

5 c⁄° 
uöt8_t
 
	gMIDI_DRUM_GM
[16] = {37, 36, 42, 82, 40, 38, 46, 44, 48, 47, 45, 43, 49, 55, 51, 53};

7 (*
_hw_f˘
)(
uöt16_t
, 
uöt8_t
, uint8_t);

9 
	$_dummy_f˘
(
uöt16_t
 
¨g1
, 
uöt8_t
 
¨g2
, uöt8_à
¨g3
){

10 
Sîül
.
	`¥öén
("midi controller dummy callback function");

11 
	}
}

14 
	gã°_¥oj_⁄e
::
	$ã°_¥oj_⁄e
(){

15 
_hw_f˘
 = 
_dummy_f˘
;

16 
	}
}

18 
	gã°_¥oj_⁄e
::~
	$ã°_¥oj_⁄e
(){

19 
	}
}

21 
ã°_¥oj_⁄e
::
	$öô_hw_˛bk
((*
f˘
)(
uöt16_t
, 
uöt8_t
, uint8_t)){

22 
_hw_f˘
 = 
f˘
;

23 
	}
}

26 
Àd_m©rix
* 
	gã°_¥oj_⁄e
::
	$gë_Àd_m©rix
(){

27  &
_lm
;

28 
	}
}

30 
	gã°_¥oj_⁄e
::
	$míu_íãr
(){

31 
	}
}

32 
ã°_¥oj_⁄e
::
	$míu_Àave
(){

33 
	}
}

34 
ã°_¥oj_⁄e
::
	$míu_upd©e
(){

35 
	}
}

38 
ã°_¥oj_⁄e
::
	$⁄_push
(
uöt8_t
 
bä_id
){

39 
_lm
.
	`£t_Àd_x
(
LED_GBR_IDX
, 
bä_id
);

44 
	`_hw_f˘
(
MIDI_DRUM_GM
[
bä_id
], 127, 1);

45 
	}
}

46 
	gã°_¥oj_⁄e
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

47 
_lm
.
	`toogÀ_Àd_x
(
LED_GBR_IDX
, 
bä_id
);

48 
Àd_toogÀ
* 
…
 = 
√w
 
	`Àd_toogÀ
();

49 
…
->
	`öô_™im©i⁄
(&
_lm
, 
bä_id
, 
LED_GBR_IDX
);

50 
…
->
	`°¨t_™im©i⁄
(
BTN_LED_DELAY_MS
);

51 
_bä_™im©i⁄_li°
.
	`add
(
…
);

55 
	`_hw_f˘
(
MIDI_DRUM_GM
[
bä_id
], 0, 1);

56 
	}
}

58 
	gã°_¥oj_⁄e
::
	$míu_⁄_push
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

59 
ªt
 = 1;

60 
¥og
::
	`di•œy_tôÀ
();

62  
ªt
;

63 
	}
}

64 
	gã°_¥oj_⁄e
::
	$míu_⁄_ªÀa£
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

65 
ªt
 = 1;

66 
i
=0; i<
MATRIX_NR_COL
; i++){

67 if(
i
 =
›t_id
){

68 
	`gë_míu_lm
()->
	`£t_Àd_x
(
LED_R_IDX
, 
func_id
 * 
MATRIX_NR_ROW
 + 
i
);

71 
	`gë_míu_lm
()->
	`˛r_Àd_x
(
LED_R_IDX
, 
func_id
 * 
MATRIX_NR_ROW
 + 
i
);

74  
ªt
;

75 
	}
}

76 
	gã°_¥oj_⁄e
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

77 
Àn
 = 
_bä_™im©i⁄_li°
.
	`size
();

78 
i
=0;i<
Àn
;i++){

79 
Àd_toogÀ
* 
…
 = 
_bä_™im©i⁄_li°
.
	`shi·
();

80 if(
…
->
	`upd©e_™im©i⁄
()){

81 
…
->
	`tu∫_off_Àd
();

82 
dñëe
 
…
;

84 
_bä_™im©i⁄_li°
.
	`add
(
…
);

91 
	}
}

	@test_proj_one.h

1 #i‚de‡
__TEST_PROJ_ONE_H__


2 
	#__TEST_PROJ_ONE_H__


	)

4 
	~<LökedLi°.h
>

6 
	~"¥og.h
"

7 
	~"Àd_m©rix.h
"

8 
	~"Àd_toogÀ.h
"

10 ˛as†
	cã°_¥oj_⁄e
 : 
public
 
¥og
 {

11 
¥iv©e
:

12 
Àd_m©rix
 
_lm
;

13 
Àd_toogÀ
 
	m_bä_™im©i⁄
;

14 
	mLökedLi°
<
	mÀd_toogÀ
 *> 
	m_bä_™im©i⁄_li°
;

16 
	mpublic
:

17 
ã°_¥oj_⁄e
();

18 ~
ã°_¥oj_⁄e
();

20 
Àd_m©rix
* 
gë_Àd_m©rix
();

21 
öô_hw_˛bk
((*
f˘
)(
uöt16_t
, 
uöt8_t
, uint8_t));

23 
	`⁄_push
(
uöt8_t
 
bä_id
);

24 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){};

25 
	`⁄_ªÀa£
(
uöt8_t
 
bä_id
);

26 
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){
	}
};

28 
míu_íãr
();

29 
míu_Àave
();

30 
míu_upd©e
();

31 
míu_⁄_push
(
uöt8_t
, uint8_t);

32 
míu_⁄_ªÀa£
(
uöt8_t
, uint8_t);

34 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

	@test_proj_two.cpp

1 
	~"ã°_¥oj_two.h
"

3 
	gã°_¥oj_two
::
	$ã°_¥oj_two
(){

5 
	}
}

7 
ã°_¥oj_two
::~
	$ã°_¥oj_two
(){

9 
	}
}

11 
Àd_m©rix
* 
ã°_¥oj_two
::
	$gë_Àd_m©rix
(){

12  &
_lm
;

13 
	}
}

15 
	gã°_¥oj_two
::
	$míu_íãr
(){

16 
	}
}

17 
ã°_¥oj_two
::
	$míu_Àave
(){

18 
	}
}

19 
ã°_¥oj_two
::
	$míu_upd©e
(){

20 
	}
}

22 
ã°_¥oj_two
::
	$⁄_push
(
uöt8_t
 
bä_id
){

23 
	}
}

24 
ã°_¥oj_two
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

25 
_lm
.
	`toogÀ_Àd_x
(
LED_B_IDX
, 
bä_id
);

26 
	}
}

28 
	gã°_¥oj_two
::
	$míu_⁄_push
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

29 
ªt
 = 1;

30 
¥og
::
	`di•œy_tôÀ
();

31  
ªt
;

32 
	}
}

33 
	gã°_¥oj_two
::
	$míu_⁄_ªÀa£
(
uöt8_t
 
func_id
, uöt8_à
›t_id
){

34 
ªt
 = 1;

35 
i
=0; i<
MATRIX_NR_COL
; i++){

36 if(
i
 =
›t_id
){

37 
	`gë_míu_lm
()->
	`£t_Àd_x
(
LED_B_IDX
, 
func_id
 * 
MATRIX_NR_ROW
 + 
i
);

40 
	`gë_míu_lm
()->
	`˛r_Àd_x
(
LED_B_IDX
, 
func_id
 * 
MATRIX_NR_ROW
 + 
i
);

43  
ªt
;

44 
	}
}

45 
	gã°_¥oj_two
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

46 
	}
}

	@test_proj_two.h

1 #i‚de‡
__TEST_PROJ_TWO_H__


2 
	#__TEST_PROJ_TWO_H__


	)

4 
	~"¥og.h
"

5 
	~"Àd_m©rix.h
"

7 ˛as†
	cã°_¥oj_two
 : 
public
 
¥og
 {

8 
¥iv©e
:

9 
Àd_m©rix
 
_lm
;

12 
	mpublic
:

13 
ã°_¥oj_two
();

14 ~
ã°_¥oj_two
();

16 
Àd_m©rix
* 
gë_Àd_m©rix
();

18 
⁄_push
(
uöt8_t
 
bä_id
);

19 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){};

20 
	`⁄_ªÀa£
(
uöt8_t
 
bä_id
);

21 
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){
	}
};

22 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

24 
míu_íãr
();

25 
míu_Àave
();

26 
míu_upd©e
();

27 
míu_⁄_push
(
uöt8_t
, uint8_t);

28 
míu_⁄_ªÀa£
(
uöt8_t
, uint8_t);

	@track.cpp

1 
	~"åack.h
"

2 
	~"§c/îøè.h
"

4 
	#CLK_LEN_PER
 (20)

	)

6 (*
_hw_f˘
)(
uöt16_t
, 
uöt8_t
, uint8_t);

8 
	$_dummy_f˘
(
uöt16_t
 
¨g1
, 
uöt8_t
 
¨g2
, uöt8_à
¨g3
){

9 
Sîül
.
	`¥öén
("track dummy callback function");

10 
	}
}

12 
boﬁ
 
	gåack
::
dñëe_°ï
(
LökedLi°
<
°ï
 *> *
l
, sãp* 
s
){

13 
boﬁ
 
	gªt
 = 
Ál£
;

14 
	gi
=0;i<
	gl
->
size
();i++){

15 if(
	gs
 =
l
->
gë
(
i
)){

16 
l
->
ªmove
(
i
);

17 
dñëe
 
	gs
;

18 
	gªt
 = 
åue
;

22  
	gªt
;

25 
chaö_°ï
(
LökedLi°
<
°ï
 *> *
li°
, sãp* 
°¨t
, sãp* 
íd
){

26 
boﬁ
 
	gÊg_chaö
 = 
Ál£
;

28 
	gi
 = 0; i<
	gli°
->
size
();i++){

29 if(
	gli°
->
gë
(
i
Ë=
°¨t
){

30 
Êg_chaö
 = 
åue
;

32 if(
	gli°
->
gë
(
i
Ë=
íd
){

33 
Êg_chaö
 = 
Ál£
;

35 if(
	gÊg_chaö
){

36 
	gli°
->
gë
(
i
)->
£t_√xt_°ï
(
li°
->get(i+1));

39 
	gli°
->
gë
(
i
)->
£t_√xt_°ï
(
°¨t
);

45 
	gåack
::
	$åack
(){

46 
cuº_°ï_id
 = 0;

47 
åack_Àn
 = 16;

48 
ñ≠£d_ms
 = 0;

49 
_hw_f˘
 = 
_dummy_f˘
;

50 
_max_°ï
 = 
NR_STEP
;

51 
_∂ay
 = 
Ál£
;

52 
_˛k_def
.
numî©‹
 = 1;

53 
_˛k_def
.
díomö©‹
 = 1;

54 
_m°_˛k_˙t
 = 1;

58 
i
=0;i<
NR_STEP
;i++){

59 
°ï
 *
s
 = 
√w
 step;

62 
s
->
_°ï_ui_id
 = 
i
;

63 
_mtx_bä_to_°ï
[
i
] = 
s
;

64 
_°ï_li°
.
	`add
(
s
);

65 
s
->
	`£t_°ï_id
(
_°ï_li°
.
	`size
() - 1);

67 
_cur_°ï
 = 
_°ï_li°
.
	`gë
(0);

68 
_fú°_°ï
 = 
_°ï_li°
.
	`gë
(0);

69 
_œ°_°ï
 = 
_°ï_li°
.
	`gë
(_°ï_li°.
	`size
() - 1);

70 
	`chaö_°ï
(&
_°ï_li°
, 
_fú°_°ï
, 
_œ°_°ï
);

72 
	}
}

100 
	gåack
::~
	$åack
(){

101 
i
=0;i<
_°ï_li°
.
	`size
();i++){

102 
°ï
* 
s
 = 
_°ï_li°
.
	`ªmove
(
i
);

103 
dñëe
 
s
;

105 
	}
}

107 
	gåack
::
	$öô_hw_˛bk
((*
f˘
)(
uöt16_t
, 
uöt8_t
, uint8_t)){

108 
_hw_f˘
 = 
f˘
;

109 
	}
}

111 
Àd_m©rix
* 
	gåack
::
	$gë_Àd_m©rix
(){

112  &
_lm
;

113 
	}
}

115 
uöt8_t
 
	gåack
::
	$gë_åack_id
(){

116  
_åack_id
;

117 
	}
}

118 
	gåack
::
	$£t_åack_id
(
uöt8_t
 
id
){

119 
_åack_id
 = 
id
;

120 
	}
}

122 
uöt8_t
 
	gåack
::
	$gë_out_id
(){

123  
_out_id
;

124 
	}
}

125 
	gåack
::
	$£t_out_id
(
uöt8_t
 
id
){

126 
_out_id
 = 
id
;

127 
	}
}

128 
	gåack
::
	$£t_Æl_°ï_nŸe
(
uöt16_t
 
nŸe
){

129 
i
=0;i<
_°ï_li°
.
	`size
();i++){

131 
_°ï_li°
.
	`gë
(
i
)->
	`°ï_£t_nŸe
(127, 
nŸe
);

133 
	}
}

143 
uöt8_t
 
	gåack
::
	$gë_max_°ï
(){

144  
_œ°_°ï
->
_°ï_ui_id
 + 1;

145 
	}
}

146 
	gåack
::
	$£t_max_°ï
(
uöt8_t
 
max
){

147 
°ï
* 
íd
;

148 if–(
íd
 = 
_mtx_bä_to_°ï
[
max
-1]) ){

149 
_œ°_°ï
 = 
íd
;

150 
	`chaö_°ï
(&
_°ï_li°
, 
_fú°_°ï
, 
_œ°_°ï
);

169 
	}
}

170 
boﬁón
 
	gåack
::
	$√xt_°ï
(
uöt32_t
 
m°_ms
){

171 
_cur_°ï
 = _cur_°ï->
	`gë_√xt_°ï
();

172 
cuº_°ï_id
 = 
_cur_°ï
->
_°ï_ui_id
;

174 
Sîül
.
	`¥öt
("numerator ");

175 
Sîül
.
	`¥öt
(
_˛k_def
.
numî©‹
 * 
_cur_°ï
->_clk_def.numerator);

176 
Sîül
.
	`¥öt
(" denominator ");

177 
Sîül
.
	`¥öén
(
_˛k_def
.
díomö©‹
 * 
_cur_°ï
->_clk_def.denominator);

181 
_c
.
	`˛k_£t_øtio
(
m°_ms


182 , 
_˛k_def
.
numî©‹
 * 
_cur_°ï
->_clk_def.numerator

183 , 
_˛k_def
.
díomö©‹
 * 
_cur_°ï
->_clk_def.denominator );

189 
_cur_°ï
->
	`upd_°ï_g©e_Àn
(
_c
.
	`˛k_gë_ms
());

191  ( 
_cur_°ï
->
	`is_°ï_a˘ive
() );

192 
	}
}

193 
uöt8_t
 
	gåack
::
	$gë_cuºít_°ï
(){

194  
cuº_°ï_id
;

195 
	}
}

196 
	gåack
::
	$°ï_ª£t
(){

197 
_cur_°ï
 = 
_fú°_°ï
;

198 
	}
}

201 
˛k
* 
	gåack
::
	$gë_˛k
(){

202  &
_c
;

203 
	}
}

215 
	gåack
::
	$muã
(){

216 
muã_Êg
 = 
åue
;

217 
	}
}

218 
	gåack
::
	$unmuã
(){

219 
muã_Êg
 = 
Ál£
;

220 
	}
}

221 
	gåack
::
	$toogÀ_muã
(){

222 
muã_Êg
 = !mute_flg;

223 
	}
}

224 
	gåack
::
	$toogÀ_∂ay
(){

225 
_∂ay
 = !_play;

226 
	}
}

227 
	gåack
::
	$£t_∂ay
(
boﬁ
 
∂ay
){

228 
_∂ay
 = 
∂ay
;

229 
	}
}

231 
uöt32_t
 
	gåack
::
	$check_evít
(
uöt32_t
 
ms
, 
uöt16_t
 
m°_°ï_˙t
){

233 
uöt32_t
 
ªs
 = 
_c
.
	`ma°î_sync_øtio
(
ms
, &
_m°_˛k_˙t
);

238 if(
ªs
){

239 if(
_∂ay
){

240 if(
	`√xt_°ï
(
ms
)){

241 if(
_cur_°ï
->
	`ª£t_g©e
()){

242 
	`_hw_f˘
(
_cur_°ï
->
_nŸe
.
pôch
, _cur_°ï->_nŸe.
vñocôy
, 
_out_id
);

247 
_°ï_™im©i⁄
.
	`öô_™im©i⁄_n_ßve
(&
_lm
, 
îøè_°ï
[
cuº_°ï_id
], 
LED_GBR_IDX
);

249 
_°ï_™im©i⁄
.
	`°¨t_™im©i⁄
(50);

253 if(
_cur_°ï
->
	`upd_g©e
()){

254 
	`_hw_f˘
(
_cur_°ï
->
_nŸe
.
pôch
, 0, 
_out_id
);

256 
_°ï_™im©i⁄
.
	`íd_™im©i⁄_n_ª°‹e
();

258  
ªs
;

259 
	}
}

261 
	gåack
::
	$⁄_push
(
uöt8_t
 
bä_id
){

262 
	}
}

263 
åack
::
	$⁄_ªÀa£
(
uöt8_t
 
bä_id
){

264 
	}
}

266 
åack
::
	$upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
){

267 
	}
}

	@track.h

1 #i‚de‡
__TRACK_H__


2 
	#__TRACK_H__


	)

4 #i‡
deföed
(
ARDUINO
) && ARDUINO >= 100

5 
	~<Arduöo.h
>

7 
	~<WProgøm.h
>

10 
	~"ty≥s.h
"

11 
	~"Àd_m©rix.h
"

12 
	~"míu.h
"

13 
	~"¥og.h
"

14 
	~"Àd_toogÀ.h
"

15 
	~"°ï.h
"

16 
	~"˛k.h
"

18 ˛as†
	cåack
 {

19 
	m¥iv©e
:

20 
uöt16_t
 
cuº_°ï_id
;

21 
uöt8_t
 
	m_max_°ï
;

22 
uöt8_t
 
	m_åack_id
;

23 
uöt8_t
 
	m_out_id
;

24 
boﬁ
 
	m_∂ay
;

25 
°ï
* 
	m_cur_°ï
;

26 
°ï
* 
	m_fú°_°ï
;

27 
°ï
* 
	m_œ°_°ï
;

29 
uöt16_t
 
	m_m°_˛k_˙t
;

31 
uöt8_t
 
	måack_Àn
;

32 
˛k
 
	m_c
;

33 
ñ≠£dMûlis
 
	mñ≠£d_ms
;

34 
Àd_m©rix
 
	m_lm
;

35 
boﬁón
 
	mmuã_Êg
;

36 
Àd_toogÀ
 
	m_°ï_™im©i⁄
;

39 
	mpublic
:

41 
LökedLi°
<
°ï
 *> 
_°ï_li°
;

42 
°ï
* 
	m_mtx_bä_to_°ï
[
NR_STEP
];

44 
˛k_def
 
	m_˛k_def
;

46 
boﬁ
 
dñëe_°ï
(
LökedLi°
<
°ï
 *> *
l
, sãp* 
s
);

49 
åack
();

51 ~
åack
();

53 
Àd_m©rix
 * 
gë_Àd_m©rix
();

54 
˛k
* 
gë_˛k
();

56 
£t_max_°ï
(
uöt8_t
 
max
);

57 
uöt8_t
 
gë_max_°ï
();

59 
£t_åack_id
(
uöt8_t
 
id
);

60 
uöt8_t
 
gë_åack_id
();

62 
£t_out_id
(
uöt8_t
 
id
);

63 
uöt8_t
 
gë_out_id
();

65 
°ï
* 
	$gë_fú°_°ï
(){

66  
_fú°_°ï
;

68 
°ï
* 
	$gë_œ°_°ï
(){

69  
_œ°_°ï
;

70 
	}
}

72 
£t_Æl_°ï_nŸe
(
uöt16_t
);

76 
boﬁón
 
√xt_°ï
(
uöt32_t
);

77 
uöt8_t
 
gë_cuºít_°ï
();

79 
°ï_ª£t
();

81 
uöt32_t
 
check_evít
(uöt32_t, 
uöt16_t
 );

82 
öô_hw_˛bk
((*
f˘
)(
uöt16_t
, 
uöt8_t
, uint8_t));

84 
	`öô_míu
();

85 
	`⁄_push
(
uöt8_t
 
bä_id
);

86 
	$⁄_l⁄g_push
(
uöt8_t
 
bä_id
){
	}
};

87 
⁄_ªÀa£
(
uöt8_t
 
bä_id
);

88 
	$⁄_l⁄g_ªÀa£
(
uöt8_t
 
bä_id
){
	}
};

90 
muã
();

91 
unmuã
();

92 
toogÀ_muã
();

93 
toogÀ_∂ay
();

94 
£t_∂ay
(
boﬁ
);

96 
upd©e_ui
(
uöt32_t
 
m°_ms
, 
uöt16_t
 
m°_°ï
);

	@types.h

25 #i‚de‡
__TYPES_H__


26 
	#__TYPES_H__


	)

28 
	#MATRIX_NR_ROW
 8

	)

29 
	#MATRIX_NR_COL
 8

	)

30 
	#LED_MATRIX_NR_COLORS
 3

	)

31 
	#NR_LEDS
 (
LED_MATRIX_NR_LEDS
*
LED_MATRIX_NR_GROUND
)

	)

32 
	#NR_STEP
 
NR_LEDS


	)

34 
	#LED_COLOR_RED_INDEX
 0

	)

35 
	#LED_COLOR_GREEN_INDEX
 1

	)

36 
	#LED_COLOR_BLUE_INDEX
 2

	)

39 #i‡
MATRIX_NR_ROW
 <= 8

40 vﬁ©ûê
	tuöt8_t
 
	tm©_row_bmp_t
;

41 #ñi‡
MATRIX_NR_ROW
 <= 16

42 vﬁ©ûê
	tuöt16_t
 
	tm©_row_bmp_t
;

43 #ñi‡
MATRIX_NR_ROW
 <= 32

44 vﬁ©ûê
	tuöt32_t
 
	tm©_row_bmp_t
;

48 
	#MIDI_SYNC_PPQN
 24

	)

50 
	#MIDI_SYNC_PPN
 (
MIDI_SYNC_PPQN
*1)

	)

54 
	#MICRO_OLED_GUI
 1

	)

	@
1
.
0
53
664
Bounce_array.cpp
Bounce_array.h
Main.cpp
Main.h
bit.cpp
bit.h
btn_state.cpp
btn_state.h
clk.cpp
clk.h
fct_clbk.cpp
fct_clbk.h
gate.cpp
gate.h
gui.cpp
gui.h
led_animation.h
led_matrix.cpp
led_matrix.h
led_state.h
led_toogle.cpp
led_toogle.h
matrix.ino
menu.cpp
menu.h
menu_btn.ino
midi.ino
oled.ino
param.cpp
param.h
prog.cpp
prog.h
seq_param.cpp
seq_param.h
sequencer.cpp
sequencer.h
src/errata.h
src/sequencer/fct_loop_setting.cpp
src/sequencer/fct_loop_setting.h
src/sequencer/fct_step.cpp
src/sequencer/fct_step.h
step.cpp
step.h
tempo.cpp
tempo.h
test7-refactor.ino
test_proj_one.cpp
test_proj_one.h
test_proj_two.cpp
test_proj_two.h
track.cpp
track.h
types.h
